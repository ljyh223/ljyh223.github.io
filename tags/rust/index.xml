<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rust on Alex lan</title><link>http://localhost:1313/tags/rust/</link><description>Recent content in Rust on Alex lan</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 08 Dec 2024 14:03:24 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>rust</title><link>http://localhost:1313/docs/code/rust/</link><pubDate>Sun, 08 Dec 2024 14:03:24 +0800</pubDate><guid>http://localhost:1313/docs/code/rust/</guid><description>&lt;h2 id="string">
 String
 &lt;a class="anchor" href="#string">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//String和&amp;amp;str的区别可自行百度
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	&lt;span style="color:#75715e">//空字符串
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	&lt;span style="color:#66d9ef">let&lt;/span> s&lt;span style="color:#f92672">=&lt;/span>String::new();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//可变字符串
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#66d9ef">mut&lt;/span> s1&lt;span style="color:#f92672">=&lt;/span>String:&lt;span style="color:#a6e22e">from&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;123&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//追加字符串
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	s1.push_str(&lt;span style="color:#e6db74">&amp;#34;456&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//追加字符
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	s1.push(&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="文件读写">
 文件读写
 &lt;a class="anchor" href="#%e6%96%87%e4%bb%b6%e8%af%bb%e5%86%99">#&lt;/a>
&lt;/h2>
&lt;h3 id="读文件">
 读文件
 &lt;a class="anchor" href="#%e8%af%bb%e6%96%87%e4%bb%b6">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> std::{fs::File, io::Read};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//使用create如果文件不存在则创建,存在则会覆盖源文件(网上所说是会)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	&lt;span style="color:#75715e">//如果使用open,没有也是会报错
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#66d9ef">mut&lt;/span> file&lt;span style="color:#f92672">=&lt;/span>File::create(&lt;span style="color:#e6db74">&amp;#34;test.txt&amp;#34;&lt;/span>).expect(&lt;span style="color:#e6db74">&amp;#34;open error&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#66d9ef">mut&lt;/span> s&lt;span style="color:#f92672">=&lt;/span>String::new();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> _ &lt;span style="color:#f92672">=&lt;/span> file.read_to_string(&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#66d9ef">mut&lt;/span> s);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print!(&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{:#?}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>,s);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="写文件">
 写文件
 &lt;a class="anchor" href="#%e5%86%99%e6%96%87%e4%bb%b6">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> std::io::Write;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#66d9ef">mut&lt;/span> file &lt;span style="color:#f92672">=&lt;/span> std::fs::File::create(&lt;span style="color:#e6db74">&amp;#34;data.txt&amp;#34;&lt;/span>).expect(&lt;span style="color:#e6db74">&amp;#34;create failed&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file.write_all(&lt;span style="color:#e6db74">&amp;#34;12345&amp;#34;&lt;/span>.as_bytes()).expect(&lt;span style="color:#e6db74">&amp;#34;write failed&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file.write_all(&lt;span style="color:#e6db74">&amp;#34;hello world&amp;#34;&lt;/span>.as_bytes()).expect(&lt;span style="color:#e6db74">&amp;#34;write failed&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="追加数据">
 追加数据
 &lt;a class="anchor" href="#%e8%bf%bd%e5%8a%a0%e6%95%b0%e6%8d%ae">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> std::fs::OpenOptions;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> std::io::Write;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#66d9ef">mut&lt;/span> file &lt;span style="color:#f92672">=&lt;/span> OpenOptions::new().append(&lt;span style="color:#66d9ef">true&lt;/span>).open(&lt;span style="color:#e6db74">&amp;#34;data.txt&amp;#34;&lt;/span>).expect(&lt;span style="color:#e6db74">&amp;#34;cannot open file&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file.write_all(&lt;span style="color:#e6db74">&amp;#34;123&amp;#34;&lt;/span>.as_bytes()).expect(&lt;span style="color:#e6db74">&amp;#34;write failed&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file.write_all(&lt;span style="color:#e6db74">&amp;#34;456&amp;#34;&lt;/span>.as_bytes()).expect(&lt;span style="color:#e6db74">&amp;#34;write failed&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file.write_all(&lt;span style="color:#e6db74">&amp;#34;789&amp;#34;&lt;/span>.as_bytes()).expect(&lt;span style="color:#e6db74">&amp;#34;write failed&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="删除文件">
 删除文件
 &lt;a class="anchor" href="#%e5%88%a0%e9%99%a4%e6%96%87%e4%bb%b6">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> std::fs;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fs::remove_file(&lt;span style="color:#e6db74">&amp;#34;data.txt&amp;#34;&lt;/span>).expect(&lt;span style="color:#e6db74">&amp;#34;could not remove file&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> println!(&lt;span style="color:#e6db74">&amp;#34;file is removed&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="文件是否存在">
 文件是否存在
 &lt;a class="anchor" href="#%e6%96%87%e4%bb%b6%e6%98%af%e5%90%a6%e5%ad%98%e5%9c%a8">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">（）&lt;/span>{ 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">let&lt;/span> file_path &lt;span style="color:#f92672">=&lt;/span> Path::new(&lt;span style="color:#960050;background-color:#1e0010">“&lt;/span>path_to_file&lt;span style="color:#960050;background-color:#1e0010">”&lt;/span>); 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> file_path.exists() { 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		println!(&lt;span style="color:#e6db74">&amp;#34;文件存在&amp;#34;&lt;/span>); 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}&lt;span style="color:#66d9ef">else&lt;/span> { 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		println!(&lt;span style="color:#e6db74">&amp;#34;文件不存在&amp;#34;&lt;/span>); 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	} 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="json">
 json
 &lt;a class="anchor" href="#json">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> std::fs::File;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> serde_json::Value;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//解析io流文件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> f&lt;span style="color:#f92672">=&lt;/span>File::open(&lt;span style="color:#e6db74">&amp;#34;test.txt&amp;#34;&lt;/span>).unwrap();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> json:&lt;span style="color:#a6e22e">Value&lt;/span>&lt;span style="color:#f92672">=&lt;/span>serde_json::from_reader(f).unwrap();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//let json:Value=serde_json::from_str(text).unwrap();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#66d9ef">in&lt;/span> json[&lt;span style="color:#e6db74">&amp;#34;data&amp;#34;&lt;/span>].as_array().unwrap(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> println!(&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>,i[&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>].as_str().unwrap());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//快速定义
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	&lt;span style="color:#66d9ef">let&lt;/span> json_object&lt;span style="color:#f92672">=&lt;/span>json!({&lt;span style="color:#e6db74">&amp;#34;total&amp;#34;&lt;/span>:&lt;span style="color:#ae81ff">123&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;data&amp;#34;&lt;/span>:[]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="reqwest">
 reqwest
 &lt;a class="anchor" href="#reqwest">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> std::{time::{SystemTime, &lt;span style="color:#66d9ef">UNIX_EPOCH&lt;/span>}};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">get_time&lt;/span>() -&amp;gt; String{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SystemTime::now()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .duration_since(&lt;span style="color:#66d9ef">UNIX_EPOCH&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .unwrap()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .as_millis()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .to_string()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">async&lt;/span> &lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">post&lt;/span>() -&amp;gt; Result&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, reqwest::Error&lt;span style="color:#f92672">&amp;gt;&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> client &lt;span style="color:#f92672">=&lt;/span> reqwest::Client::new();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// let mut headers = HeaderMap::new();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// headers.insert(&amp;#34;Content-Type&amp;#34;, &amp;#34;application/json&amp;#34;.parse().unwrap());
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> time&lt;span style="color:#f92672">=&lt;/span>get_time();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> data&lt;span style="color:#f92672">=&lt;/span>[(&lt;span style="color:#e6db74">&amp;#34;phone&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;17340307464&amp;#34;&lt;/span>),(&lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;d41d8cd98f00b204e9800998ecf8427e&amp;#34;&lt;/span>),(&lt;span style="color:#e6db74">&amp;#34;countrycode&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>),(&lt;span style="color:#e6db74">&amp;#34;rememberLogin&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>),(&lt;span style="color:#e6db74">&amp;#34;timerstamp&amp;#34;&lt;/span>,&lt;span style="color:#f92672">&amp;amp;&lt;/span>time)];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ok(client.post(&lt;span style="color:#e6db74">&amp;#34;https://music.163.com/weapi/login/cellphone&amp;#34;&lt;/span>).json(&lt;span style="color:#f92672">&amp;amp;&lt;/span>data).send().&lt;span style="color:#66d9ef">await&lt;/span>&lt;span style="color:#f92672">?&lt;/span>.text().&lt;span style="color:#66d9ef">await&lt;/span>&lt;span style="color:#f92672">?&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#[tokio::main]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">async&lt;/span> &lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> Ok(res) &lt;span style="color:#f92672">=&lt;/span> post().&lt;span style="color:#66d9ef">await&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> println!(&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{:#?}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, res);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="集合相关">
 集合相关
 &lt;a class="anchor" href="#%e9%9b%86%e5%90%88%e7%9b%b8%e5%85%b3">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> a &lt;span style="color:#f92672">=&lt;/span> vec![(&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;aa&amp;#34;&lt;/span>), (&lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;c&amp;#34;&lt;/span>), (&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;cc&amp;#34;&lt;/span>)];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> b &lt;span style="color:#f92672">=&lt;/span> vec![(&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;cc&amp;#34;&lt;/span>), (&lt;span style="color:#ae81ff">5&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;ee&amp;#34;&lt;/span>), (&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;aa&amp;#34;&lt;/span>)];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 取交集
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> intersect &lt;span style="color:#f92672">=&lt;/span> a.iter().filter(&lt;span style="color:#f92672">|&amp;amp;&lt;/span>u&lt;span style="color:#f92672">|&lt;/span> b.contains(u)).collect::&lt;span style="color:#f92672">&amp;lt;&lt;/span>Vec&lt;span style="color:#f92672">&amp;lt;&lt;/span>_&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> println!(&lt;span style="color:#e6db74">&amp;#34;a 和 b 交集是：&lt;/span>&lt;span style="color:#e6db74">{:?}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, intersect);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 取差集
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> minusion &lt;span style="color:#f92672">=&lt;/span> a.iter().filter(&lt;span style="color:#f92672">|&amp;amp;&lt;/span>u&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">!&lt;/span>b.contains(u)).collect::&lt;span style="color:#f92672">&amp;lt;&lt;/span>Vec&lt;span style="color:#f92672">&amp;lt;&lt;/span>_&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> println!(&lt;span style="color:#e6db74">&amp;#34;a 和 b 差集是：&lt;/span>&lt;span style="color:#e6db74">{:?}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, minusion);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 取并集
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#66d9ef">union&lt;/span> &lt;span style="color:#f92672">=&lt;/span> a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .iter()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .filter(&lt;span style="color:#f92672">|&amp;amp;&lt;/span>u&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">!&lt;/span>b.contains(u))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .chain(&lt;span style="color:#f92672">&amp;amp;&lt;/span>b)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .collect::&lt;span style="color:#f92672">&amp;lt;&lt;/span>Vec&lt;span style="color:#f92672">&amp;lt;&lt;/span>_&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> println!(&lt;span style="color:#e6db74">&amp;#34;a 和 b 并集是：&lt;/span>&lt;span style="color:#e6db74">{:?}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">union&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 取补集
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> complement &lt;span style="color:#f92672">=&lt;/span> a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .iter()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .filter(&lt;span style="color:#f92672">|&amp;amp;&lt;/span>u&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">!&lt;/span>b.contains(u))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .chain(b.iter().filter(&lt;span style="color:#f92672">|&amp;amp;&lt;/span>u&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">!&lt;/span>a.contains(u)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .collect::&lt;span style="color:#f92672">&amp;lt;&lt;/span>Vec&lt;span style="color:#f92672">&amp;lt;&lt;/span>_&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> println!(&lt;span style="color:#e6db74">&amp;#34;a 和 b 补集是：&lt;/span>&lt;span style="color:#e6db74">{:?}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, complement);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="hashmap">
 hashmap
 &lt;a class="anchor" href="#hashmap">#&lt;/a>
&lt;/h3>
&lt;p>hashmap 补集&lt;/p></description></item><item><title>rust</title><link>http://localhost:1313/posts/rust/</link><pubDate>Mon, 23 Oct 2023 20:50:37 +0000</pubDate><guid>http://localhost:1313/posts/rust/</guid><description>&lt;h3 id="string">
 String
 &lt;a class="anchor" href="#string">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//String和&amp;amp;str的区别可自行百度
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	&lt;span style="color:#75715e">//空字符串
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	&lt;span style="color:#66d9ef">let&lt;/span> s&lt;span style="color:#f92672">=&lt;/span>String::new();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//可变字符串
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#66d9ef">mut&lt;/span> s1&lt;span style="color:#f92672">=&lt;/span>String:&lt;span style="color:#a6e22e">from&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;123&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//追加字符串
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	s1.push_str(&lt;span style="color:#e6db74">&amp;#34;456&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//追加字符
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	s1.push(&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!-- raw HTML omitted -->
&lt;h3 id="json">
 json
 &lt;a class="anchor" href="#json">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> std::fs::File;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> serde_json::Value;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//解析io流文件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> f&lt;span style="color:#f92672">=&lt;/span>File::open(&lt;span style="color:#e6db74">&amp;#34;test.txt&amp;#34;&lt;/span>).unwrap();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> json:&lt;span style="color:#a6e22e">Value&lt;/span>&lt;span style="color:#f92672">=&lt;/span>serde_json::from_reader(f).unwrap();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//let json:Value=serde_json::from_str(text).unwrap();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#66d9ef">in&lt;/span> json[&lt;span style="color:#e6db74">&amp;#34;data&amp;#34;&lt;/span>].as_array().unwrap(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> println!(&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>,i[&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>].as_str().unwrap());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="reqwest">
 reqwest
 &lt;a class="anchor" href="#reqwest">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> std::{time::{SystemTime, &lt;span style="color:#66d9ef">UNIX_EPOCH&lt;/span>}};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">get_time&lt;/span>() -&amp;gt; String{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SystemTime::now()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .duration_since(&lt;span style="color:#66d9ef">UNIX_EPOCH&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .unwrap()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .as_millis()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .to_string()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">async&lt;/span> &lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">post&lt;/span>() -&amp;gt; Result&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, reqwest::Error&lt;span style="color:#f92672">&amp;gt;&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> client &lt;span style="color:#f92672">=&lt;/span> reqwest::Client::new();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// let mut headers = HeaderMap::new();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// headers.insert(&amp;#34;Content-Type&amp;#34;, &amp;#34;application/json&amp;#34;.parse().unwrap());
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> time&lt;span style="color:#f92672">=&lt;/span>get_time();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> data&lt;span style="color:#f92672">=&lt;/span>[(&lt;span style="color:#e6db74">&amp;#34;phone&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;17340307464&amp;#34;&lt;/span>),(&lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;d41d8cd98f00b204e9800998ecf8427e&amp;#34;&lt;/span>),(&lt;span style="color:#e6db74">&amp;#34;countrycode&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>),(&lt;span style="color:#e6db74">&amp;#34;rememberLogin&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>),(&lt;span style="color:#e6db74">&amp;#34;timerstamp&amp;#34;&lt;/span>,&lt;span style="color:#f92672">&amp;amp;&lt;/span>time)];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ok(client.post(&lt;span style="color:#e6db74">&amp;#34;https://music.163.com/weapi/login/cellphone&amp;#34;&lt;/span>).json(&lt;span style="color:#f92672">&amp;amp;&lt;/span>data).send().&lt;span style="color:#66d9ef">await&lt;/span>&lt;span style="color:#f92672">?&lt;/span>.text().&lt;span style="color:#66d9ef">await&lt;/span>&lt;span style="color:#f92672">?&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#[tokio::main]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">async&lt;/span> &lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> Ok(res) &lt;span style="color:#f92672">=&lt;/span> post().&lt;span style="color:#66d9ef">await&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> println!(&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{:#?}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, res);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="集合相关">
 集合相关
 &lt;a class="anchor" href="#%e9%9b%86%e5%90%88%e7%9b%b8%e5%85%b3">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> a &lt;span style="color:#f92672">=&lt;/span> vec![(&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;aa&amp;#34;&lt;/span>), (&lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;c&amp;#34;&lt;/span>), (&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;cc&amp;#34;&lt;/span>)];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> b &lt;span style="color:#f92672">=&lt;/span> vec![(&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;cc&amp;#34;&lt;/span>), (&lt;span style="color:#ae81ff">5&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;ee&amp;#34;&lt;/span>), (&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;aa&amp;#34;&lt;/span>)];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 取交集
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> intersect &lt;span style="color:#f92672">=&lt;/span> a.iter().filter(&lt;span style="color:#f92672">|&amp;amp;&lt;/span>u&lt;span style="color:#f92672">|&lt;/span> b.contains(u)).collect::&lt;span style="color:#f92672">&amp;lt;&lt;/span>Vec&lt;span style="color:#f92672">&amp;lt;&lt;/span>_&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> println!(&lt;span style="color:#e6db74">&amp;#34;a 和 b 交集是：&lt;/span>&lt;span style="color:#e6db74">{:?}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, intersect);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 取差集
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> minusion &lt;span style="color:#f92672">=&lt;/span> a.iter().filter(&lt;span style="color:#f92672">|&amp;amp;&lt;/span>u&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">!&lt;/span>b.contains(u)).collect::&lt;span style="color:#f92672">&amp;lt;&lt;/span>Vec&lt;span style="color:#f92672">&amp;lt;&lt;/span>_&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> println!(&lt;span style="color:#e6db74">&amp;#34;a 和 b 差集是：&lt;/span>&lt;span style="color:#e6db74">{:?}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, minusion);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 取并集
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#66d9ef">union&lt;/span> &lt;span style="color:#f92672">=&lt;/span> a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .iter()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .filter(&lt;span style="color:#f92672">|&amp;amp;&lt;/span>u&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">!&lt;/span>b.contains(u))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .chain(&lt;span style="color:#f92672">&amp;amp;&lt;/span>b)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .collect::&lt;span style="color:#f92672">&amp;lt;&lt;/span>Vec&lt;span style="color:#f92672">&amp;lt;&lt;/span>_&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> println!(&lt;span style="color:#e6db74">&amp;#34;a 和 b 并集是：&lt;/span>&lt;span style="color:#e6db74">{:?}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">union&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 取补集
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> complement &lt;span style="color:#f92672">=&lt;/span> a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .iter()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .filter(&lt;span style="color:#f92672">|&amp;amp;&lt;/span>u&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">!&lt;/span>b.contains(u))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .chain(b.iter().filter(&lt;span style="color:#f92672">|&amp;amp;&lt;/span>u&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">!&lt;/span>a.contains(u)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .collect::&lt;span style="color:#f92672">&amp;lt;&lt;/span>Vec&lt;span style="color:#f92672">&amp;lt;&lt;/span>_&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> println!(&lt;span style="color:#e6db74">&amp;#34;a 和 b 补集是：&lt;/span>&lt;span style="color:#e6db74">{:?}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, complement);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="lyric-and-add_pic">
 lyric and add_pic
 &lt;a class="anchor" href="#lyric-and-add_pic">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> metaflac::Tag;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> metaflac::block::PictureType::Media;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#[tokio::main]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">async&lt;/span> &lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() -&amp;gt; Result&lt;span style="color:#f92672">&amp;lt;&lt;/span>(), reqwest::Error&lt;span style="color:#f92672">&amp;gt;&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> lyc&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;[00:09.74]群青色の空&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[00:11.88]自由なんてものは&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[00:14.02]手を伸ばすほどに遠く遠く飛んでく&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[00:16.80]ほら、海猫の歌が僕を笑っているんだ&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[00:21.28]夏の島に縛られた十六年間&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[00:25.08]長い前髪も伸び過ぎて捨てられたあの日みたい&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[00:29.32]どんな愛情も&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[00:30.50]ねえ、たったひと切れのパンより軽い（ライト）&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[00:32.80]生きているよ&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[00:34.43]神様にもきっと見捨てられている僕でも&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[00:40.10]追い風に白い帆を上げよう&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[00:43.92]君が留まり僕がゆくなら&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[00:47.76]いつか遠い海で会えるんだろう&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[00:51.56]きっとこの星はまあるいから&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[00:55.40]追い風に白い帆を上げよう&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[00:59.14]君が留まり僕がゆくなら&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[01:02.88]いつか遠い海で会えるんだろう&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[01:06.78]きっとこの星はまあるいから&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[01:25.62]潮の香りが染み込んでいる日だ&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[01:29.76]薄汚れた白い背中を押す風が吹いた&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[01:33.68]もし叶うなら愛されたいな&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[01:37.52]あたたかな胸に頰を埋め眠りたいな&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[01:41.38]雲を追うよ、風を切るマスト&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[01:45.02]僕を乗せた船はどこまでも&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[01:48.72]黄金島にもゆけるよ&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[01:50.60]地図はないけど&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[01:52.32]さあ、人魚たちの歌に手を叩こう&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[01:56.54]ナナナ……&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[02:11.53]追い風に白い帆を上げよう&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[02:15.30]君が留まり僕がゆくなら&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[02:19.16]いつか遠い海で会えるんだろう&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[02:22.92]きっとこの星はまあるいから&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[02:26.94]追い風に白い帆を上げよう&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[02:30.48]君が留まり僕がゆくなら&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[02:34.24]いつか遠い海で会えるんだろう&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[02:38.16]きっとこの星はまあるいから&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[02:47.54]まあるいから&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[02:55.42]まあるいから&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#66d9ef">mut&lt;/span> tag &lt;span style="color:#f92672">=&lt;/span> Tag::read_from_path(&lt;span style="color:#e6db74">&amp;#34;C:/test/rust/demo1/file/wcat.flac&amp;#34;&lt;/span>).unwrap();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> data&lt;span style="color:#f92672">=&lt;/span>reqwest::get(&lt;span style="color:#e6db74">&amp;#34;https://p2.music.126.net/mog628G4JLNEMi-GpWxccQ==/109951164647211717.jpg&amp;#34;&lt;/span>).&lt;span style="color:#66d9ef">await&lt;/span>&lt;span style="color:#f92672">?&lt;/span>.bytes().&lt;span style="color:#66d9ef">await&lt;/span>&lt;span style="color:#f92672">?&lt;/span>.to_vec();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tag.add_picture(&lt;span style="color:#e6db74">&amp;#34;image/jpeg&amp;#34;&lt;/span>, Media, data);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> comment&lt;span style="color:#f92672">=&lt;/span>tag.vorbis_comments_mut();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> comment.set_lyrics(vec![lyc]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tag.save().unwrap();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ok(())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>